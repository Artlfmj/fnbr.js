{"meta":{"generator":"1.0.0","format":20,"date":1613921836523},"custom":{"general":{"name":"general","files":{"welcome":{"name":"Welcome","type":"md","content":"<div align=\"center\">\n  <br />\n  <p>\n    <a href=\"https://fnbr.js.org/\"><img src=\"/static/logo.svg\" width=\"546\" alt=\"fnbr.js\" id=\"fnbrjs-logo\" style=\"filter: drop-shadow(0 3px 4px #333);\" /></a>\n  </p>\n  <p>\n    <a href=\"https://nodei.co/npm/fnbr/\"><img src=\"https://nodei.co/npm/fnbr.png?downloads=true&stars=true\" alt=\"NPM info\" /></a>\n  </p>\n</div>\n\n# fnbr.js\nA library to interact with fortnites http and xmpp services\n\n## Installation\n```\nnpm i fnbr\n```\n\n## Example\nExample: \n```javascript\nconst { Client } = require('fnbr');\n\nconst client = new Client({\n  auth: {\n    authorizationCode: '',\n  },\n});\n\nclient.on('friend:message', (friendMessage) => {\n  console.log(`Message from ${friendMessage.friend.displayName}: ${friendMessage.content}`);\n  if (friendMessage.content.toLowerCase().startsWith('ping')) {\n    friendMessage.author.sendMessage('Pong!');\n  }\n});\n\n(async () => {\n  await client.login();\n  console.log(`Logged in as ${client.user.displayName}`);\n})();\n```\n\n## Help\nFeel free to join [this Discord server](https://discord.gg/HsUFr5f)\n\n## License\nMIT License\n\nCopyright (c) 2020 Nils S.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n","path":"docs/general/welcome.md"},"auth":{"name":"Authentication","type":"md","content":"# Authentication\nfnbr.js does not support email & password as an authentication method as you get a captcha in 9 out of 10 cases.\n\n## So whats the preferred way of authenticating?\nYou should use an authorization code for the first time you login and generate a device auth.\n\n**Example:**\n```javascript\nconst { readFile, writeFile } = require('fs').promises;\nconst { Client } = require('fnbr');\n\n(async () => {\n  let auth;\n  try {\n    auth = { deviceAuth: JSON.parse(await readFile('./deviceAuth.json')) };\n  } catch (e) {\n    auth = { authorizationCode: async () => Client.consoleQuestion('Please enter an authorization code: ') };\n  }\n\n  const client = new Client({ auth });\n\n  client.on('deviceauth:created', (da) => writeFile('./deviceAuth.json', JSON.stringify(da, null, 2)));\n\n  await client.login();\n  console.log(`Logged in as ${client.user.displayName}`);\n})();\n```\n\n## How do I get an authorization code?\nYou can use [this link](https://www.epicgames.com/id/logout?redirectUrl=https%3A//www.epicgames.com/id/login%3FredirectUrl%3Dhttps%253A%252F%252Fwww.epicgames.com%252Fid%252Fapi%252Fredirect%253FclientId%253D3446cd72694c4a4485d81b77adbb2141%2526responseType%253Dcode)! An authorization code can only be used once and expires after 300 seconds. Thats why you should generate a device auth with it\n\n## How does a device auth work?\nA device auth doesn't expire and it consists of a accountId, deviceId and secret. You can create as many device auths for an account as you want\n","path":"docs/general/auth.md"}}},"examples":{"name":"examples","files":{"simple":{"name":"Simple Client","type":"js","content":"/* eslint-disable */\nconst { Client } = require('fnbr');\n\nconst client = new Client({\n  auth: {\n    authorizationCode: '',\n  },\n});\n\nclient.on('friend:message', (friendMessage) => {\n  console.log(`Message from ${friendMessage.friend.displayName}: ${friendMessage.content}`);\n  if (friendMessage.content.toLowerCase().startsWith('ping')) {\n    friendMessage.author.sendMessage('Pong!');\n  }\n});\n\n(async () => {\n  await client.login();\n  console.log(`Logged in as ${client.user.displayName}`);\n})();\n","path":"docs/examples/simple.js"},"deviceauth":{"name":"DeviceAuth Client","type":"js","content":"/* eslint-disable */\nconst { readFile, writeFile } = require('fs').promises;\nconst { Client } = require('fnbr');\n\n(async () => {\n  let auth;\n  try {\n    auth = { deviceAuth: JSON.parse(await readFile('./deviceAuth.json')) };\n  } catch (e) {\n    auth = { authorizationCode: async () => Client.consoleQuestion('Please enter an authorization code: ') };\n  }\n\n  const client = new Client({ auth });\n\n  client.on('deviceauth:created', (da) => writeFile('./deviceAuth.json', JSON.stringify(da, null, 2)));\n\n  await client.login();\n  console.log(`Logged in as ${client.user.displayName}`);\n})();\n","path":"docs/examples/deviceauth.js"}}},"api examples":{"name":"api examples","files":{"fortniteapicom":{"name":"Fortnite-API.com","type":"js","content":"/* eslint-disable */\nconst { readFile, writeFile } = require('fs').promises;\nconst { get } = require('request-promise');\nconst { Client } = require('fnbr');\n\nconst fetchCosmetic = async (name, type) => {\n  try {\n    const cosmetic = (await get({ url: `https://fortnite-api.com/v2/cosmetics/br/search?name=${encodeURI(name)}&type=${type}`, json: true })).data;\n    return cosmetic;\n  } catch (err) {\n    return undefined;\n  }\n};\n\nconst handleCommand = async (m) => {\n  if (!m.content.startsWith('!')) return;\n  const args = m.content.slice(1).split(' ');\n  const command = args.shift().toLowerCase();\n\n  if (command === 'outfit' || command === 'skin') {\n    const skin = await fetchCosmetic(args.join(' '), 'outfit');\n    if (skin) {\n      m.client.party.me.setOutfit(skin.id);\n      m.reply(`Set the skin to ${skin.name}!`);\n    } else m.reply(`The skin ${args.join(' ')} wasn't found!`);\n  } else if (command === 'emote' || command === 'dance') {\n    const emote = await fetchCosmetic(args.join(' '), 'emote');\n    if (emote) {\n      m.client.party.me.setEmote(emote.id);\n      m.reply(`Set the emote to ${emote.name}!`);\n    } else m.reply(`The emote ${args.join(' ')} wasn't found!`);\n  }\n};\n\n(async () => {\n  let auth;\n  try {\n    auth = { deviceAuth: JSON.parse(await readFile('./deviceAuth.json')) };\n  } catch (e) {\n    auth = { authorizationCode: async () => Client.consoleQuestion('Please enter an authorization code: ') };\n  }\n\n  const client = new Client({ auth });\n\n  client.on('deviceauth:created', (da) => writeFile('./deviceAuth.json', JSON.stringify(da, null, 2)));\n  client.on('party:member:message', handleCommand);\n  client.on('friend:message', handleCommand);\n\n  await client.login();\n  console.log(`Logged in as ${client.user.displayName}`);\n})();\n","path":"docs/api examples/fortniteapicom.js"},"fortniteapiio":{"name":"FortniteAPI.io","type":"js","content":"/* eslint-disable */\nconst { readFile, writeFile } = require('fs').promises;\nconst { get } = require('request-promise');\nconst { Client } = require('fnbr');\n\n// Your fortniteapi.io api key https://dashboard.fortniteapi.io/\nconst APIKEY = '';\n\nconst fetchCosmetic = async (name, type) => {\n  try {\n    const cosmetic = await get({\n      url: `https://fortniteapi.io/items/list?name=${encodeURI(name)}&type=${type}`,\n      headers: { Authorization: APIKEY },\n      json: true,\n    });\n    return cosmetic.items[0];\n  } catch (err) {\n    return undefined;\n  }\n};\n\nconst handleCommand = async (m) => {\n  if (!m.content.startsWith('!')) return;\n  const args = m.content.slice(1).split(' ');\n  const command = args.shift().toLowerCase();\n\n  if (command === 'outfit' || command === 'skin') {\n    const skin = await fetchCosmetic(args.join(' '), 'outfit');\n    if (skin) {\n      m.client.party.me.setOutfit(skin.id);\n      m.reply(`Set the skin to ${skin.name}!`);\n    } else m.reply(`The skin ${args.join(' ')} wasn't found!`);\n  } else if (command === 'emote' || command === 'dance') {\n    const emote = await fetchCosmetic(args.join(' '), 'emote');\n    if (emote) {\n      m.client.party.me.setEmote(emote.id);\n      m.reply(`Set the emote to ${emote.name}!`);\n    } else m.reply(`The emote ${args.join(' ')} wasn't found!`);\n  }\n};\n\n(async () => {\n  let auth;\n  try {\n    auth = { deviceAuth: JSON.parse(await readFile('./deviceAuth.json')) };\n  } catch (e) {\n    auth = { authorizationCode: async () => Client.consoleQuestion('Please enter an authorization code: ') };\n  }\n\n  const client = new Client({ auth });\n\n  client.on('deviceauth:created', (da) => writeFile('./deviceAuth.json', JSON.stringify(da, null, 2)));\n  client.on('party:member:message', handleCommand);\n  client.on('friend:message', handleCommand);\n\n  await client.login();\n  console.log(`Logged in as ${client.user.displayName}`);\n})();\n","path":"docs/api examples/fortniteapiio.js"}}}},"classes":[{"name":"Authenticator","description":"Represents the authentication manager of a client","access":"private","construct":{"name":"Authenticator","params":[{"name":"client","description":"The main client","type":[[["Client"]]]}]},"props":[{"name":"auths","description":"The authentification data","type":[[["AuthData"]]],"meta":{"line":23,"file":"Authenticator.js","path":"src/client"}},{"name":"reauths","description":"The reauthentification data","type":[[["AuthData"]]],"meta":{"line":32,"file":"Authenticator.js","path":"src/client"}},{"name":"account","description":"The client's account","type":[[["AuthAccount"]]],"meta":{"line":41,"file":"Authenticator.js","path":"src/client"}}],"methods":[{"name":"authenticate","description":"Starts the authentication process","async":true,"returns":[[["Promise","<"],["Object",">"]]],"meta":{"line":51,"file":"Authenticator.js","path":"src/client"}},{"name":"refreshToken","description":"Checks if a token refresh is needed and reauthenticates if needed","params":[{"name":"forceVerify","description":"Whether the access token should be verified","optional":true,"default":false,"type":[[["boolean"]]]}],"async":true,"meta":{"line":114,"file":"Authenticator.js","path":"src/client"}},{"name":"reauthenticate","description":"Reauthenticates / Refreshes the access token","async":true,"returns":[[["Promise","<"],["Object",">"]]],"meta":{"line":139,"file":"Authenticator.js","path":"src/client"}},{"name":"deviceAuthAuthenticate","description":"Authenticates using device auth","params":[{"name":"deviceAuth","description":"The device auth credentials","type":[[["Object"]],[["string"]],[["function"]]]}],"async":true,"returns":[[["Promise","<"],["Object",">"]]],"meta":{"line":179,"file":"Authenticator.js","path":"src/client"}},{"name":"exchangeCodeAuthenticate","description":"Authenticates using an exchange code","params":[{"name":"exchangeCode","description":"The exchange code","type":[[["string"]],[["function"]]]},{"name":"token","description":"The basic token that will be used","optional":true,"default":"FORTNITE_IOS","type":[[["BasicToken"]]]}],"async":true,"returns":[[["Promise","<"],["Object",">"]]],"meta":{"line":208,"file":"Authenticator.js","path":"src/client"}},{"name":"authorizationCodeAuthenticate","description":"Authenticates using an authorization code","params":[{"name":"authorizationCode","description":"The authorization code","type":[[["string"]],[["function"]]]}],"async":true,"returns":[[["Promise","<"],["Object",">"]]],"meta":{"line":233,"file":"Authenticator.js","path":"src/client"}},{"name":"refreshTokenAuthenticate","description":"Authenticates using a refresh token","params":[{"name":"refreshToken","description":"The refresh token","type":[[["string"]],[["function"]]]}],"async":true,"returns":[[["Promise","<"],["Object",">"]]],"meta":{"line":258,"file":"Authenticator.js","path":"src/client"}},{"name":"deviceCodeAuthenticate","description":"Authenticates using a device code","async":true,"returns":[[["Promise","<"],["Object",">"]]],"meta":{"line":282,"file":"Authenticator.js","path":"src/client"}},{"name":"getOauthToken","description":"Obtains an access token","params":[{"name":"grant_type","description":"The grant type","type":[[["string"]]]},{"name":"valuePair","description":"The token value pair","type":[[["Object"]]]},{"name":"token","description":"The basic token","type":[[["BasicToken"]]]}],"async":true,"returns":[[["Promise","<"],["Object",">"]]],"meta":{"line":308,"file":"Authenticator.js","path":"src/client"}},{"name":"generateDeviceCode","description":"Creates a device code","async":true,"returns":[[["Promise","<"],["Object",">"]]],"meta":{"line":322,"file":"Authenticator.js","path":"src/client"}},{"name":"useDeviceCode","description":"Creates a device code","params":[{"name":"deviceCode","description":"The device code","type":[[["string"]]]},{"name":"interval","description":"The request interval in seconds","type":[[["number"]]]}],"returns":[[["Promise","<"],["Object",">"]]],"meta":{"line":339,"file":"Authenticator.js","path":"src/client"}},{"name":"generateDeviceAuth","description":"Generates a device auth","params":[{"name":"tokenResponse","description":"The response from the oauth token request","type":[[["Object"]]]}],"async":true,"returns":[[["Promise","<"],["Object",">"]]],"meta":{"line":360,"file":"Authenticator.js","path":"src/client"}},{"name":"acceptEULA","description":"Accepts EULA if needed","async":true,"returns":[[["Promise","<"],["Object",">"]]],"meta":{"line":369,"file":"Authenticator.js","path":"src/client"}}],"meta":{"line":16,"file":"Authenticator.js","path":"src/client"}},{"name":"Base","description":"Represents the base class of many other classes","abstract":true,"props":[{"name":"client","description":"The main client","readonly":true,"type":[[["Client"]]],"meta":{"line":7,"file":"Base.js","path":"src/client"}}],"meta":{"line":6,"file":"Base.js","path":"src/client"}},{"name":"HTTP","description":"Represents the HTTP manager of a client","access":"private","construct":{"name":"HTTP","params":[{"name":"client","description":"The main client","type":[[["Client"]]]}]},"props":[{"name":"options","description":"The default requests options","type":[[["HTTPOptions"]]],"meta":{"line":26,"file":"HTTP.js","path":"src/client"}},{"name":"axios","description":"The axios instance","type":[[["AxiosInstance"]]],"meta":{"line":32,"file":"HTTP.js","path":"src/client"}}],"methods":[{"name":"send","description":"Sends a HTTP request","params":[{"name":"checkToken","description":"Whether the access token should be checked if it's valid","type":[[["boolean"]]]},{"name":"method","description":"The HTTP method","type":[[["string"]]]},{"name":"url","description":"The uri","type":[[["string"]]]},{"name":"auth","description":"The authorization header","type":[[["string"]]]},{"name":"headers","description":"The headers","type":[[["Object"]]]},{"name":"data","description":"The body","type":[[["Object"]]]},{"name":"form","description":"The form","type":[[["Object"]]]}],"async":true,"returns":[[["Promise","<"],["Object",">"]]],"meta":{"line":47,"file":"HTTP.js","path":"src/client"}}],"meta":{"line":13,"file":"HTTP.js","path":"src/client"}},{"name":"Client","description":"The main client","extends":[[["EventEmitter"]]],"construct":{"name":"Client","params":[{"name":"args","description":"Client options","type":[[["ClientOptions"]]]}]},"props":[{"name":"config","description":"The config of the client","type":[[["ClientOptions"]]],"meta":{"line":43,"file":"index.js","path":"src/client"}},{"name":"isReady","description":"Whether the client is ready or not","type":[[["boolean"]]],"meta":{"line":49,"file":"index.js","path":"src/client"}},{"name":"lastMemberMeta","description":"The default party member meta of the client","access":"private","nullable":true,"type":[[["Object"]]],"meta":{"line":56,"file":"index.js","path":"src/client"}},{"name":"user","description":"The user of the client","nullable":true,"type":[[["ClientUser"]]],"meta":{"line":62,"file":"index.js","path":"src/client"}},{"name":"party","description":"The party that the client is currently in","nullable":true,"type":[[["Party"]]],"meta":{"line":68,"file":"index.js","path":"src/client"}},{"name":"auth","description":"The authentication manager of the client","access":"private","type":[[["Authenticator"]]],"meta":{"line":75,"file":"index.js","path":"src/client"}},{"name":"http","description":"The HTTP manager of the client","access":"private","type":[[["HTTP"]]],"meta":{"line":81,"file":"index.js","path":"src/client"}},{"name":"xmpp","description":"The XMPP manager of the client","access":"private","type":[[["XMPP"]]],"meta":{"line":87,"file":"index.js","path":"src/client"}},{"name":"friends","description":"The friend manager of the client","type":[[["FriendManager"]]],"meta":{"line":92,"file":"index.js","path":"src/client"}},{"name":"makeCamelCase","description":"Converts an object's keys to camel case","access":"private","type":[],"meta":{"line":148,"file":"index.js","path":"src/client"}}],"methods":[{"name":"parseError","description":"Parses an error","access":"private","params":[{"name":"error","description":"The error to be parsed","type":[[["Object"]],[["string"]]]}],"meta":{"line":141,"file":"index.js","path":"src/client"}},{"name":"login","description":"Initiates client's login process","async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":162,"file":"index.js","path":"src/client"}},{"name":"logout","description":"Disconnects the client","async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":189,"file":"index.js","path":"src/client"}},{"name":"restart","description":"Restarts the client","async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":215,"file":"index.js","path":"src/client"}},{"name":"updateCache","description":"Refreshes the client's friends (including pending and blocked)","access":"private","async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":225,"file":"index.js","path":"src/client"}},{"name":"initParty","description":"Initiates a party","access":"private","params":[{"name":"create","description":"Whether to create a new party if the bot is already member of a party","default":true,"type":[[["boolean"]]]}],"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":269,"file":"index.js","path":"src/client"}},{"name":"debug","description":"Debug a message via the debug function provided in the client's config (if provided)","access":"private","params":[{"name":"message","description":"The message that will be debugged","type":[[["string"]]]}],"returns":[[["void"]]],"meta":{"line":283,"file":"index.js","path":"src/client"}},{"name":"waitForEvent","description":"Sleep until an event is emitted","params":[{"name":"event","description":"The event will be waited for","type":[[["string"]],[["symbol"]]]},{"name":"timeout","description":"The timeout (in milliseconds)","optional":true,"default":5000,"type":[[["number"]]]},{"name":"filter","description":"The filter for the event","optional":true,"type":[[["function"]]]}],"returns":[[["Promise","<"],["Object",">"]]],"meta":{"line":311,"file":"index.js","path":"src/client"}},{"name":"waitUntilReady","description":"Sleep until the client is ready","params":[{"name":"timeout","description":"The timeout (in milliseconds)","optional":true,"default":20000,"type":[[["number"]]]}],"meta":{"line":347,"file":"index.js","path":"src/client"}},{"name":"mergeDefault","description":"Merges a default object with a given one","access":"private","params":[{"name":"def","description":"The default object","type":[[["Object"]]]},{"name":"given","description":"The given object","type":[[["Object"]]]}],"returns":{"types":[[["Object"]]],"description":"The merged objects"},"meta":{"line":386,"file":"index.js","path":"src/client"}},{"name":"getProfile","description":"Fetches an Epic Games account","examples":["client.getProfile('aabbccddeeff00112233445566778899');"],"params":[{"name":"query","description":"The id, name or email of the account(s) you want to fetch","type":[[["string"]],[["Array","<"],["string",">"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["User",">"]],[["Promise","<"],["Array","<"],["User",">>"]]],"description":"The fetched account(s)"},"meta":{"line":399,"file":"index.js","path":"src/client"}},{"name":"setStatus","description":"Changes the presence status","params":[{"name":"status","description":"The status message; can be null/undefined if you want to reset it","optional":true,"type":[[["string"]]]},{"name":"to","description":"The display name or the id of the friend; can be undefined if you want to update the presence status for all friends","optional":true,"type":[[["string"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":441,"file":"index.js","path":"src/client"}},{"name":"addFriend","description":"Sends / accepts a friend request to an Epic Games user","params":[{"name":"user","description":"The id, name or email of the user","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":464,"file":"index.js","path":"src/client"}},{"name":"removeFriend","description":"Removes a friend or reject an user's friend request","params":[{"name":"user","description":"The id, name or email of the user","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":481,"file":"index.js","path":"src/client"}},{"name":"blockUser","description":"Blocks a user","params":[{"name":"user","description":"The id, name or email of the user","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":498,"file":"index.js","path":"src/client"}},{"name":"unblockUser","description":"Unblocks a user","params":[{"name":"user","description":"The id, name or email of the user","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":511,"file":"index.js","path":"src/client"}},{"name":"sendFriendMessage","description":"Sends a message to a friend","params":[{"name":"friend","description":"The id or name of the friend","type":[[["string"]]]},{"name":"message","description":"The message","type":[[["string"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["FriendMessage",">"]]],"description":"The sent friend message"},"meta":{"line":525,"file":"index.js","path":"src/client"}},{"name":"invite","description":"Sends a party invitation to a friend","params":[{"name":"friend","description":"The id or name of the friend","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["SentPartyInvitation",">"]]],"meta":{"line":546,"file":"index.js","path":"src/client"}},{"name":"getNews","description":"Fetches news for a gamemode","params":[{"name":"mode","description":"The gamemode","type":[[["Gamemode"]]]},{"name":"language","description":"The language","type":[[["Language"]]]}],"async":true,"returns":[[["Promise","<"],["Array","<"],["News",">>"]]],"meta":{"line":558,"file":"index.js","path":"src/client"}},{"name":"getBRStats","description":"Fetches v2 stats for one or multiple players","params":[{"name":"user","description":"The id, name or email of the user","type":[[["string"]]]},{"name":"startTime","description":"The timestamp to start fetching stats from; can be null/undefined for lifetime","optional":true,"type":[[["number"]]]},{"name":"endTime","description":"The timestamp to stop fetching stats from; can be undefined for lifetime","optional":true,"type":[[["number"]]]}],"async":true,"returns":[[["Promise","<"],["Object",">"]]],"meta":{"line":576,"file":"index.js","path":"src/client"}},{"name":"getCreatorCode","description":"Lookups for a creator code","params":[{"name":"code","description":"The creator code","type":[[["string"]]]},{"name":"showSimilar","description":"Whether an array with similar creator codes should be returned","default":false,"type":[[["boolean"]]]}],"async":true,"returns":[[["Promise","<"],["CreatorCode",">"]],[["Promise","<"],["Array","<"],["CreatorCode",">>"]]],"meta":{"line":601,"file":"index.js","path":"src/client"}},{"name":"getBRStore","description":"Fetches the current Battle Royale store","params":[{"name":"language","description":"The language","type":[[["Language"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["BRShop",">"]]],"description":"The Battle Royale store"},"meta":{"line":621,"file":"index.js","path":"src/client"}},{"name":"getBREventFlags","description":"Fetch the current Battle Royale event flags","params":[{"name":"language","description":"The language","type":[[["Language"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Object",">"]]],"description":"The Battle Royale event flags"},"meta":{"line":633,"file":"index.js","path":"src/client"}},{"name":"getFortniteServerStatus","description":"Fetch the current Fortnite server status","async":true,"returns":{"types":[[["Promise","<"],["Object",">"]]],"description":"The server status"},"meta":{"line":644,"file":"index.js","path":"src/client"}},{"name":"getServerStatus","description":"Fetch the current epicgames server status","async":true,"returns":{"types":[[["Promise","<"],["Object",">"]]],"description":"The server status"},"meta":{"line":655,"file":"index.js","path":"src/client"}},{"name":"getTournaments","description":"Fetch all past and upcoming Fortnite tournaments","params":[{"name":"region","description":"The region eg. EU, ASIA, NAE","default":"EU","type":[[["string"]]]},{"name":"platform","description":"The full platform name (Windows, Android, etc)","default":"Windows","type":[[["string"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Object",">"]]],"description":"The tournaments"},"meta":{"line":668,"file":"index.js","path":"src/client"}},{"name":"getTournamentWindow","description":"Fetch a Fortnite tournament window by id","params":[{"name":"eventId","description":"The event id (eg epicgames_S13_FNCS_EU_Qualifier4_PC)","type":[[["string"]]]},{"name":"windowId","description":"The window id (eg S13_FNCS_EU_Qualifier4_PC_Round1)","type":[[["string"]]]},{"name":"showLiveSessions","description":"Whether to show live sessions","default":false,"type":[[["boolean"]]]},{"name":"page","description":"The starting page","default":0,"type":[[["number"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Object",">"]]],"description":"The tournament window"},"meta":{"line":695,"file":"index.js","path":"src/client"}},{"name":"getRadioStations","description":"Fetch all available radio stations","async":true,"returns":{"types":[[["Promise","<"],["Object",">"]]],"description":"Radio stations"},"meta":{"line":708,"file":"index.js","path":"src/client"}},{"name":"getRadioStream","description":"Download a radio stream","examples":["fs.writeFile('./stream.m3u8', await client.getRadioStream('BXrDueZkosvNvxtx', Enums.Language.ENGLISH));\nin cmd: ffmpeg -protocol_whitelist https,file,tcp,tls -i stream.m3u8 -ab 211200 radio.mp3"],"params":[{"name":"id","description":"The stream id (use getRadioStations)","type":[[["string"]]]},{"name":"language","description":"The stream language","type":[[["Language"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Buffer",">"]]],"description":"The m3u8 audio file as a Buffer"},"meta":{"line":726,"file":"index.js","path":"src/client"}},{"name":"getBlurlVideo","description":"Download a blurl video by its id (eg news videos)","examples":["fs.writeFile('./video.m3u8', await client.getBlurlVideo('kDrsgRdgDiQrNOSu', Enums.Language.ENGLISH, '1920x1080'));\nin cmd: ffmpeg -protocol_whitelist https,file,tcp,tls -i ./video.m3u8 ./newsVid.mp4"],"params":[{"name":"id","description":"The blurl video id (ie videoUID in getNews)","type":[[["string"]]]},{"name":"language","description":"The video language","type":[[["Language"]]]},{"name":"resolution","description":"The video resolution (1920x1080, 1152x656, 1280x720, 864x480, 640x368, 512x288)","default":"1920x1080","type":[[["string"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Buffer",">"]]],"description":"The m3u8 video file as a buffer"},"meta":{"line":753,"file":"index.js","path":"src/client"}},{"name":"getTournamentReplay","description":"Download a tournament match by its session id","params":[{"name":"sessionId","description":"The game session id (eg in getTournamentWindow's sessions)","type":[[["string"]]]},{"name":"downloads","description":"Which replay data to fetch","nullable":true,"type":[[["Array"]]]},{"name":"outputEncoding","description":"The encoding for binary data","default":"hex","nullable":true,"type":[[["BufferEncoding"]]]}],"async":true,"returns":{"types":[[["Object"]]],"description":"The replay json data"},"meta":{"line":794,"file":"index.js","path":"src/client"}},{"name":"makeCamelCase","description":"Convert an object's keys to camel case","scope":"static","access":"private","params":[{"name":"obj","description":"The object that will be converted","type":[[["Object"]]]}],"returns":{"types":[[["Object"]]],"description":"The converted object"},"meta":{"line":293,"file":"index.js","path":"src/client"}},{"name":"sleep","description":"Sleep for the provided milliseconds","scope":"static","access":"private","params":[{"name":"timeout","description":"The timeout (in milliseconds)","type":[[["number"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":326,"file":"index.js","path":"src/client"}},{"name":"consoleQuestion","description":"Display a console prompt","scope":"static","access":"private","params":[{"name":"question","description":"The text that will be prompted","type":[[["string"]]]}],"returns":{"types":[[["Promise","<"],["string",">"]]],"description":"The received answer"},"meta":{"line":336,"file":"index.js","path":"src/client"}},{"name":"mergeDefault","description":"Merges a default object with a given one","scope":"static","access":"private","params":[{"name":"def","description":"The default object","type":[[["Object"]]]},{"name":"given","description":"The given object","type":[[["Object"]]]}],"returns":{"types":[[["Object"]]],"description":"The merged objects"},"meta":{"line":367,"file":"index.js","path":"src/client"}}],"events":[{"name":"ready","description":"Emitted when the Client is ready","meta":{"line":825,"file":"index.js","path":"src/client"}},{"name":"deviceauth:created","description":"Emitted when a device auth is created for the client's user","params":[{"name":"credentials","description":"The device auth's credentials","type":[[["DeviceAuthCredentials"]]]}],"meta":{"line":830,"file":"index.js","path":"src/client"}},{"name":"party:member:message","description":"Emitted when a member sends a message in the party's chat room","params":[{"name":"partyMessage","description":"The party message","type":[[["PartyMessage"]]]}],"meta":{"line":836,"file":"index.js","path":"src/client"}},{"name":"friend:presence","description":"Emitted when a friend updates his presence","params":[{"name":"beforeFriendPresence","description":"The previous friend's presence","type":[[["FriendPresence"]]]},{"name":"beforeFriendPresence","description":"The current friend's presence","type":[[["FriendPresence"]]]}],"meta":{"line":842,"file":"index.js","path":"src/client"}},{"name":"friend:message","description":"Emitted when the client receives a message from a friend","params":[{"name":"friendMessage","description":"The friend message","type":[[["FriendMessage"]]]}],"meta":{"line":849,"file":"index.js","path":"src/client"}},{"name":"friend:added","description":"Emitted when a friend request is accepted","params":[{"name":"friend","description":"The added friend","type":[[["Friend"]]]}],"meta":{"line":855,"file":"index.js","path":"src/client"}},{"name":"friend:request","description":"Emitted when the client receives a friend request","params":[{"name":"pendingFriend","description":"The received friend request","type":[[["PendingFriend"]]]}],"meta":{"line":861,"file":"index.js","path":"src/client"}},{"name":"friend:request:sent","description":"Emitted when the client sends a friend request","params":[{"name":"pendingFriend","description":"The sent friend request","type":[[["PendingFriend"]]]}],"meta":{"line":867,"file":"index.js","path":"src/client"}},{"name":"friend:request:aborted","description":"Emitted when a friend request is aborted","params":[{"name":"pendingFriend","description":"The aborted friend request","type":[[["PendingFriend"]]]}],"meta":{"line":873,"file":"index.js","path":"src/client"}},{"name":"friend:request:rejected","description":"Emitted when a friend request is rejected","params":[{"name":"pendingFriend","description":"The rejected friend request","type":[[["PendingFriend"]]]}],"meta":{"line":879,"file":"index.js","path":"src/client"}},{"name":"friend:removed","description":"Emitted when a friend is removed","params":[{"name":"friend","description":"The removed friend","type":[[["Friend"]]]}],"meta":{"line":885,"file":"index.js","path":"src/client"}},{"name":"friend:blocked","description":"Emitted when a friend is blocked","params":[{"name":"friend","description":"The blocked friend","type":[[["Friend"]]]}],"meta":{"line":891,"file":"index.js","path":"src/client"}},{"name":"friend:unblocked","description":"Emitted when a friend is unblocked","params":[{"name":"friend","description":"The unblocked friend","type":[[["Friend"]]]}],"meta":{"line":897,"file":"index.js","path":"src/client"}},{"name":"party:invite","description":"Emitted when the client receives a party invite","params":[{"name":"partyInvitation","description":"The party invite","type":[[["PartyInvitation"]]]}],"meta":{"line":903,"file":"index.js","path":"src/client"}},{"name":"party:member:joined","description":"Emitted when a member joins the party","params":[{"name":"partyMember","description":"The member that joined the party","type":[[["PartyMember"]]]}],"meta":{"line":909,"file":"index.js","path":"src/client"}},{"name":"party:member:updated","description":"Emitted when a party member gets updated","params":[{"name":"partyMember","description":"The updated party member","type":[[["PartyMember"]]]}],"meta":{"line":915,"file":"index.js","path":"src/client"}},{"name":"party:member:left","description":"Emitted when a member leaves the party","params":[{"name":"partyMember","description":"The party member","type":[[["PartyMember"]]]}],"meta":{"line":921,"file":"index.js","path":"src/client"}},{"name":"party:member:expired","description":"Emitted when a party member expires","params":[{"name":"partyMember","description":"The party member","type":[[["PartyMember"]]]}],"meta":{"line":927,"file":"index.js","path":"src/client"}},{"name":"party:member:kicked","description":"Emitted when a party member gets kicked","params":[{"name":"partyMember","description":"The kicked party member","type":[[["PartyMember"]]]}],"meta":{"line":933,"file":"index.js","path":"src/client"}},{"name":"party:member:disconnected","description":"Emitted when a party member gets disconnected","params":[{"name":"partyMember","description":"The disconnected party member","type":[[["PartyMember"]]]}],"meta":{"line":939,"file":"index.js","path":"src/client"}},{"name":"party:member:promoted","description":"Emitted when a party member gets promoted","params":[{"name":"partyMember","description":"The promoted party member","type":[[["PartyMember"]]]}],"meta":{"line":945,"file":"index.js","path":"src/client"}},{"name":"party:updated","description":"Emitted when a party member gets updated","params":[{"name":"partyMember","description":"The updated party member","type":[[["PartyMember"]]]}],"meta":{"line":951,"file":"index.js","path":"src/client"}},{"name":"party:invite:declined","description":"Emitted when a party invite gets declined","params":[{"name":"friend","description":"The friend that declined the party invite","type":[[["Friend"]]]}],"meta":{"line":957,"file":"index.js","path":"src/client"}},{"name":"devicecode:prompt","description":"Emitted when a device code should be prompted to the user","params":[{"name":"code","description":"The device code url","type":[[["string"]]]}],"meta":{"line":963,"file":"index.js","path":"src/client"}}],"meta":{"line":37,"file":"index.js","path":"src/client"}},{"name":"BaseManager","description":"Represents the base class for managers","abstract":true,"props":[{"name":"holds","description":"The data structure belonging to this manager","access":"private","readonly":true,"type":[[["function"]]],"meta":{"line":14,"file":"BaseManager.js","path":"src/client/managers"}},{"name":"cache","description":"Holds the cache","type":[[["Collection"]]],"meta":{"line":27,"file":"BaseManager.js","path":"src/client/managers"}}],"methods":[{"name":"resolve","description":"Resolves a data entry to a data Object.","params":[{"name":"resolvable","description":"A resolvable of something in this Manager","type":[[["string"]],[["Object"]]]}],"returns":{"types":[[["Object"]]],"description":"An instance from this Manager","nullable":true},"meta":{"line":45,"file":"BaseManager.js","path":"src/client/managers"}}],"meta":{"line":11,"file":"BaseManager.js","path":"src/client/managers"}},{"name":"BlockedUserManager","description":"Represents the blocked users manager","meta":{"line":8,"file":"BlockedUserManager.js","path":"src/client/managers"}},{"name":"FriendManager","description":"Represents the friend manager","props":[{"name":"pending","description":"The pending friends manager","type":[[["PendingFriendManager"]]],"meta":{"line":17,"file":"FriendManager.js","path":"src/client/managers"}},{"name":"blocked","description":"The blocked users manager","type":[[["BlockedUserManager"]]],"meta":{"line":23,"file":"FriendManager.js","path":"src/client/managers"}}],"meta":{"line":10,"file":"FriendManager.js","path":"src/client/managers"}},{"name":"PendingFriendManager","description":"Represents the pending friends manager","meta":{"line":8,"file":"PendingFriendManager.js","path":"src/client/managers"}},{"name":"XMPP","description":"Represents the XMPP manager of a client","access":"private","construct":{"name":"XMPP","params":[{"name":"client","description":"The main client","type":[[["Object"]]]}]},"props":[{"name":"stream","description":"The XMPP connection stream","nullable":true,"type":[[["Agent"]]],"meta":{"line":32,"file":"XMPP.js","path":"src/client"}},{"name":"connected","description":"Whether the XMPP client is connected or not","type":[[["boolean"]]],"meta":{"line":38,"file":"XMPP.js","path":"src/client"}},{"name":"isReconnecting","description":"Whether the XMPP client is reconnecting or not","type":[[["boolean"]]],"meta":{"line":44,"file":"XMPP.js","path":"src/client"}},{"name":"uuid","description":"The XMPP client's UUID","type":[[["string"]]],"meta":{"line":50,"file":"XMPP.js","path":"src/client"}},{"name":"resource","description":"The XMPP client's resource","nullable":true,"type":[[["string"]]],"meta":{"line":56,"file":"XMPP.js","path":"src/client"}},{"name":"kickedPartyIds","description":"This stores the parties which the client got kicked from\nYou can't accept an invite of a party you got kicked from","type":[[["Array"]]],"meta":{"line":63,"file":"XMPP.js","path":"src/client"}}],"methods":[{"name":"setup","description":"Setups the XMPP stream and events","returns":[[["void"]]],"meta":{"line":70,"file":"XMPP.js","path":"src/client"}},{"name":"connect","description":"Connects the XMPP client to Epic Games' services","params":[{"name":"isReconnect","description":"Whether this is a reconnection or not","default":false,"type":[[["boolean"]]]}],"returns":[[["Promise","<"],["Object",">"]]],"meta":{"line":100,"file":"XMPP.js","path":"src/client"}},{"name":"disconnect","description":"Disconnects the XMPP client","returns":[[["Promise","<"],["Object",">"]]],"meta":{"line":137,"file":"XMPP.js","path":"src/client"}},{"name":"reconnect","description":"Reconnects the XMPP client","async":true,"returns":[[["Promise","<"],["Object",">"]]],"meta":{"line":158,"file":"XMPP.js","path":"src/client"}},{"name":"setupEvents","description":"Setups the XMPP events","returns":[[["void"]]],"meta":{"line":189,"file":"XMPP.js","path":"src/client"}},{"name":"sendStatus","description":"Sends a presence status","params":[{"name":"status","description":"The status message; can be null/undefined if you want to reset it","optional":true,"type":[[["string"]]]},{"name":"to","description":"The XMPP address of the friend; can be undefined if you want to update the presence status for all friends","optional":true,"type":[[["string"]]]}],"returns":[[["void"]]],"meta":{"line":503,"file":"XMPP.js","path":"src/client"}}],"meta":{"line":25,"file":"XMPP.js","path":"src/client"}},{"name":"BlockedUser","description":"Represents a blocked user","extends":[[["User"]]],"props":[{"name":"displayName","description":"The user's name","type":[[["string"]]],"meta":{"line":20,"file":"User.js","path":"src/structs"}},{"name":"id","description":"The user's id","type":[[["string"]]],"meta":{"line":26,"file":"User.js","path":"src/structs"}},{"name":"externalAuths","description":"The user's external auths","type":[[["Object"]]],"meta":{"line":32,"file":"User.js","path":"src/structs"}},{"name":"links","description":"The user's linked accounts","type":[[["Object"]]],"meta":{"line":38,"file":"User.js","path":"src/structs"}}],"methods":[{"name":"unblock","description":"Unblocks the user","async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":12,"file":"BlockedUser.js","path":"src/structs"}},{"name":"addFriend","description":"Adds this user as a friend or accepts its friend request","inherits":"User#addFriend","inherited":true,"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":51,"file":"User.js","path":"src/structs"}},{"name":"fetch","description":"Updates this user's display name, external auths and links","inherits":"User#fetch","inherited":true,"async":true,"returns":{"types":[[["Promise","<"],["User",">"]]],"description":"This user"},"meta":{"line":59,"file":"User.js","path":"src/structs"}},{"name":"fetchStats","description":"Fetches the v2 stats for this user","inherits":"User#fetchStats","inherited":true,"params":[{"name":"startTime","description":"The timestamp to start fetching stats from; can be null/undefined for lifetime","nullable":true,"type":[[["number"]]]},{"name":"endTime","description":"The timestamp to stop fetching stats from; can be undefined for lifetime","nullable":true,"type":[[["number"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Object",">"]]],"description":"The user's stats"},"meta":{"line":73,"file":"User.js","path":"src/structs"}}],"meta":{"line":7,"file":"BlockedUser.js","path":"src/structs"}},{"name":"BRShop","description":"Represents a fortnite battle royale shop","construct":{"name":"BRShop","params":[{"name":"data","description":"The shop data","type":[[["Object"]]]}]},"props":[{"name":"daily","description":"The daily offers","type":[[["BRShopOffer"]]],"meta":{"line":15,"file":"BRShop.js","path":"src/structs"}},{"name":"featured","description":"The featured (weekly) offers","type":[[["BRShopOffer"]]],"meta":{"line":21,"file":"BRShop.js","path":"src/structs"}},{"name":"specialDaily","description":"The special daily offers","type":[[["BRShopOffer"]]],"meta":{"line":27,"file":"BRShop.js","path":"src/structs"}},{"name":"specialFeatured","description":"The special featured (weekly) offers","type":[[["BRShopOffer"]]],"meta":{"line":33,"file":"BRShop.js","path":"src/structs"}}],"meta":{"line":10,"file":"BRShop.js","path":"src/structs"}},{"name":"BRShopOffer","description":"Represents a fortnite battle royale shop offer","construct":{"name":"BRShopOffer","params":[{"name":"shop","description":"The shop","type":[[["BRShop"]]]},{"name":"data","description":"The offer's data","type":[[["Object"]]]}]},"props":[{"name":"id","description":"The offer's id","type":[[["string"]]],"meta":{"line":17,"file":"BRShopOffer.js","path":"src/structs"}},{"name":"devName","description":"The offer's dev name","type":[[["string"]]],"meta":{"line":23,"file":"BRShopOffer.js","path":"src/structs"}},{"name":"fulfillmentIds","description":"The offer's fulfillment ids","type":[[["Array"]]],"meta":{"line":29,"file":"BRShopOffer.js","path":"src/structs"}},{"name":"dailyLimit","description":"The offer's daily limit","type":[[["number"]]],"meta":{"line":35,"file":"BRShopOffer.js","path":"src/structs"}},{"name":"weeklyLimit","description":"The offer's weekly limit","type":[[["number"]]],"meta":{"line":41,"file":"BRShopOffer.js","path":"src/structs"}},{"name":"monthlyLimit","description":"The offer's monthly limit","type":[[["number"]]],"meta":{"line":47,"file":"BRShopOffer.js","path":"src/structs"}},{"name":"categories","description":"The offer's categories","type":[[["Array"]]],"meta":{"line":53,"file":"BRShopOffer.js","path":"src/structs"}},{"name":"prices","description":"The offer's prices","type":[[["Array"]]],"meta":{"line":59,"file":"BRShopOffer.js","path":"src/structs"}},{"name":"meta","description":"The offer's meta","type":[[["Object"]]],"meta":{"line":65,"file":"BRShopOffer.js","path":"src/structs"}},{"name":"matchFilter","description":"The offer's match filter","type":[[["string"]]],"meta":{"line":71,"file":"BRShopOffer.js","path":"src/structs"}},{"name":"filterWeight","description":"The offer's filter weight","type":[[["number"]]],"meta":{"line":77,"file":"BRShopOffer.js","path":"src/structs"}},{"name":"appStoreId","description":"The offer's app store id","type":[[["Array"]]],"meta":{"line":83,"file":"BRShopOffer.js","path":"src/structs"}},{"name":"requirements","description":"The offer's requirements","type":[[["Array"]]],"meta":{"line":89,"file":"BRShopOffer.js","path":"src/structs"}},{"name":"type","description":"The offer's type","type":[[["string"]]],"meta":{"line":95,"file":"BRShopOffer.js","path":"src/structs"}},{"name":"giftInfo","description":"The offer's gift info","type":[[["Object"]]],"meta":{"line":101,"file":"BRShopOffer.js","path":"src/structs"}},{"name":"refundable","description":"Whether the offer's is refundable","type":[[["boolean"]]],"meta":{"line":107,"file":"BRShopOffer.js","path":"src/structs"}},{"name":"metaInfo","description":"The offer's meta info","type":[[["Array"]]],"meta":{"line":113,"file":"BRShopOffer.js","path":"src/structs"}},{"name":"displayAssetPath","description":"The offer's display asset path","type":[[["string"]]],"meta":{"line":119,"file":"BRShopOffer.js","path":"src/structs"}},{"name":"itemGrants","description":"The offer's item grants","type":[[["Array"]]],"meta":{"line":125,"file":"BRShopOffer.js","path":"src/structs"}},{"name":"additionalGrants","description":"The offer's additional grants","type":[[["Array"]]],"meta":{"line":131,"file":"BRShopOffer.js","path":"src/structs"}},{"name":"sortPriority","description":"The offer's sort priority","type":[[["number"]]],"meta":{"line":137,"file":"BRShopOffer.js","path":"src/structs"}},{"name":"catalogGroupPriority","description":"The offer's catalog group priority","type":[[["number"]]],"meta":{"line":143,"file":"BRShopOffer.js","path":"src/structs"}}],"meta":{"line":10,"file":"BRShopOffer.js","path":"src/structs"}},{"name":"ClientPartyMember","description":"Represents the party member of a client","extends":[[["PartyMember"]]],"construct":{"name":"ClientPartyMember","params":[{"name":"party","description":"The member's party","type":[[["Object"]]]},{"name":"data","description":"The party member's data","type":[[["Object"]]]}]},"props":[{"name":"currentlyPatching","description":"Whether the client's party member is currently sending a patch","type":[[["boolean"]]],"meta":{"line":21,"file":"ClientPartyMember.js","path":"src/structs"}},{"name":"patchQueue","description":"Queue to push patches into while currentlyPatching is true","type":[[["Array"]]],"meta":{"line":27,"file":"ClientPartyMember.js","path":"src/structs"}},{"name":"revision","description":"The revision of the client's party member","type":[[["number"]]],"meta":{"line":33,"file":"ClientPartyMember.js","path":"src/structs"}},{"name":"id","description":"The id of the party member","type":[[["string"]]],"meta":{"line":20,"file":"PartyMember.js","path":"src/structs"}},{"name":"displayName","description":"The display name of the party member","type":[[["string"]]],"meta":{"line":26,"file":"PartyMember.js","path":"src/structs"}},{"name":"role","description":"The role of the party member","type":[[["string"]]],"meta":{"line":33,"file":"PartyMember.js","path":"src/structs"}},{"name":"joinedAt","description":"The Date when this member joined the party","type":[[["Date"]]],"meta":{"line":39,"file":"PartyMember.js","path":"src/structs"}},{"name":"meta","description":"The meta of this party member","type":[[["PartyMemberMeta"]]],"meta":{"line":45,"file":"PartyMember.js","path":"src/structs"}},{"name":"pickaxe","description":"The id of this party member's pickaxe","readonly":true,"type":[[["string"]]],"meta":{"line":53,"file":"PartyMember.js","path":"src/structs"}},{"name":"outfit","description":"The id of this party member's outfit","readonly":true,"type":[[["string"]]],"meta":{"line":62,"file":"PartyMember.js","path":"src/structs"}},{"name":"emote","description":"The id of this party member's emote","readonly":true,"type":[[["string"]]],"meta":{"line":71,"file":"PartyMember.js","path":"src/structs"}},{"name":"backpack","description":"The id of this party member's backpack","readonly":true,"type":[[["string"]]],"meta":{"line":82,"file":"PartyMember.js","path":"src/structs"}},{"name":"isReady","description":"Whether this party member is ready or not","readonly":true,"type":[[["boolean"]]],"meta":{"line":93,"file":"PartyMember.js","path":"src/structs"}},{"name":"isLeader","description":"Whether this member is the leader of the party","readonly":true,"type":[[["boolean"]]],"meta":{"line":102,"file":"PartyMember.js","path":"src/structs"}}],"methods":[{"name":"setReadiness","description":"Sets the readiness of the client's party member","params":[{"name":"ready","description":"Whether the party member should be ready or not","type":[[["boolean"]]]}],"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":43,"file":"ClientPartyMember.js","path":"src/structs"}},{"name":"setSittingOut","description":"Sets the sitting out state of the client's party member","params":[{"name":"sittingOut","description":"Whether the party member should be sitting out or not","type":[[["boolean"]]]}],"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":55,"file":"ClientPartyMember.js","path":"src/structs"}},{"name":"setLevel","description":"Sets the level of the client's party member","params":[{"name":"level","description":"The level that will be set","type":[[["number"]]]}],"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":66,"file":"ClientPartyMember.js","path":"src/structs"}},{"name":"setBattlepass","description":"Sets the Battle Pass info of the party member","params":[{"name":"isPurchased","description":"Whether the Battle Pass was purchased or not","type":[[["boolean"]]]},{"name":"level","description":"The Battle Pass level","type":[[["number"]]]},{"name":"selfBoost","description":"The self boost percent","type":[[["number"]]]},{"name":"friendBoost","description":"The friend boost percent","type":[[["number"]]]}],"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":88,"file":"ClientPartyMember.js","path":"src/structs"}},{"name":"setBanner","description":"Sets party member's banner","params":[{"name":"banner","description":"The banner's id","type":[[["string"]]]},{"name":"color","description":"The banner color","type":[[["string"]]]}],"async":true,"meta":{"line":111,"file":"ClientPartyMember.js","path":"src/structs"}},{"name":"setOutfit","description":"Sets the party member's outfit","examples":["client.party.me.setOutfit('CID_028_Athena_Commando_F');\n// with variants:\nclient.party.me.setOutfit('CID_029_Athena_Commando_F_Halloween', [{ channel: 'Material', variant: 'Mat3' }]);\n// with enlightment:\nclient.party.me.setOutfit('CID_701_Athena_Commando_M_BananaAgent', [{ channel: 'Progressive', variant: 'Stage4' }], [2, 350]);"],"params":[{"name":"cid","description":"The skin's id","type":[[["string"]]]},{"name":"variants","description":"The skin's variants","optional":true,"default":"[]","type":[[["Array"]]]},{"name":"enlightment","description":"The skin's enlightment","optional":true,"default":"[]","type":[[["Array"]]]}],"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":139,"file":"ClientPartyMember.js","path":"src/structs"}},{"name":"setBackpack","description":"Sets the party member's backpack","examples":["client.party.me.setBackpack('BID_001_BlueSquire');\n// with variants\nclient.party.me.setBackpack('BID_105_GhostPortal', [{ channel: 'Particle', variant: 'Particle1' }]);"],"params":[{"name":"bid","description":"The backpack's id","type":[[["string"]]]},{"name":"variants","description":"The backpack's variants","optional":true,"default":"[]","type":[[["Array"]]]}],"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":196,"file":"ClientPartyMember.js","path":"src/structs"}},{"name":"setPickaxe","description":"Sets the party member's pickaxe","examples":["client.party.me.setPickaxe('Pickaxe_ID_011_Medieval');\n// with variants\nclient.party.me.setPickaxe('Pickaxe_ID_109_SkullTrooper', [{ channel: 'Material', variant: 'Mat2' }]);"],"params":[{"name":"pickaxe","description":"The pickaxe's id","type":[[["string"]]]},{"name":"variants","description":"The pickaxe's variants","optional":true,"default":"[]","type":[[["Array"]]]}],"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":244,"file":"ClientPartyMember.js","path":"src/structs"}},{"name":"setEmote","description":"Sets the party member's emote","params":[{"name":"eid","description":"The emote's id","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":287,"file":"ClientPartyMember.js","path":"src/structs"}},{"name":"setEmoji","description":"Sets the party member's emoji","params":[{"name":"emoji","description":"The emoji's id","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":308,"file":"ClientPartyMember.js","path":"src/structs"}},{"name":"clearEmote","description":"Clears the party member's emote","async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":328,"file":"ClientPartyMember.js","path":"src/structs"}},{"name":"clearBackpack","description":"Clears the party member's backpack","async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":347,"file":"ClientPartyMember.js","path":"src/structs"}},{"name":"setPlaying","description":"Show the client as \"in a match\" in party\nVisually, doesn't actually join a match","params":[{"name":"isPlaying","description":"Whether the client is playing or not","default":true,"nullable":true,"type":[[["boolean"]]]},{"name":"playerCount","description":"Match player count (must be between 0 and 255)","default":100,"nullable":true,"type":[[["number"]]]},{"name":"startedAt","description":"When the match started (ISO date string)","nullable":true,"type":[[["string"]]]}],"async":true,"meta":{"line":368,"file":"ClientPartyMember.js","path":"src/structs"}},{"name":"sendPatch","description":"Sends a patch with the latest meta","access":"private","params":[{"name":"updated","description":"The updated data","type":[[["Object"]]]},{"name":"isForced","description":"Whether the patch should ignore current patches","type":[[["Boolean"]]]}],"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":389,"file":"ClientPartyMember.js","path":"src/structs"}},{"name":"kick","description":"Kicks this member from the party","inherits":"PartyMember#kick","inherited":true,"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":110,"file":"PartyMember.js","path":"src/structs"}},{"name":"promote","description":"Promotes this member to the party leader","inherits":"PartyMember#promote","inherited":true,"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":118,"file":"PartyMember.js","path":"src/structs"}},{"name":"fetch","description":"Fetch or update this members display name","inherits":"PartyMember#fetch","inherited":true,"async":true,"meta":{"line":125,"file":"PartyMember.js","path":"src/structs"}},{"name":"update","description":"Updates the party member's meta","access":"private","inherits":"PartyMember#update","inherited":true,"params":[{"name":"data","description":"The updated meta","type":[[["Object"]]]}],"returns":[[["void"]]],"meta":{"line":136,"file":"PartyMember.js","path":"src/structs"}}],"meta":{"line":14,"file":"ClientPartyMember.js","path":"src/structs"}},{"name":"ClientUser","description":"Represents the user of a client","extends":[[["User"]]],"construct":{"name":"ClientUser","params":[{"name":"client","description":"The main client","type":[[["Client"]]]},{"name":"data","description":"The user's data","type":[[["Object"]]]}]},"props":[{"name":"name","description":"The first name of the client's Epic Games account","type":[[["string"]]],"meta":{"line":21,"file":"ClientUser.js","path":"src/structs"}},{"name":"lastName","description":"The last name of the client's Epic Games account","type":[[["string"]]],"meta":{"line":27,"file":"ClientUser.js","path":"src/structs"}},{"name":"email","description":"The email of the client's Epic Games account","type":[[["string"]]],"meta":{"line":33,"file":"ClientUser.js","path":"src/structs"}},{"name":"failedLoginAttempts","description":"The number of failed login attempts of the client's Epic Games account","type":[[["number"]]],"meta":{"line":39,"file":"ClientUser.js","path":"src/structs"}},{"name":"lastLogin","description":"The last time somebody logged in on the client's Epic Games account","type":[[["Date"]]],"meta":{"line":45,"file":"ClientUser.js","path":"src/structs"}},{"name":"numberOfDisplayNameChanges","description":"The number of display name changes of the client's Epic Games account","type":[[["number"]]],"meta":{"line":51,"file":"ClientUser.js","path":"src/structs"}},{"name":"ageGroup","description":"The age group of the client's Epic Games account","type":[[["string"]]],"meta":{"line":57,"file":"ClientUser.js","path":"src/structs"}},{"name":"headless","description":"Whether the account has no display name due to no epicgames account being linked","type":[[["boolean"]]],"meta":{"line":63,"file":"ClientUser.js","path":"src/structs"}},{"name":"country","description":"The country of the client's Epic Games account","type":[[["boolean"]]],"meta":{"line":69,"file":"ClientUser.js","path":"src/structs"}},{"name":"preferredLanguage","description":"The preferred language of the client's Epic Games account","type":[[["string"]]],"meta":{"line":75,"file":"ClientUser.js","path":"src/structs"}},{"name":"canUpdateDisplayName","description":"Whether the client's Epic Games account can update its display name","type":[[["boolean"]]],"meta":{"line":81,"file":"ClientUser.js","path":"src/structs"}},{"name":"tfaEnabled","description":"Whether a Two-Factor-Authentification method is enabled","type":[[["boolean"]]],"meta":{"line":87,"file":"ClientUser.js","path":"src/structs"}},{"name":"emailVerified","description":"Whether the email is verified (now required when creating accounts)","type":[[["boolean"]]],"meta":{"line":93,"file":"ClientUser.js","path":"src/structs"}},{"name":"minorVerified","description":"Whether the account has been verified to be run by a minor","type":[[["boolean"]]],"meta":{"line":99,"file":"ClientUser.js","path":"src/structs"}},{"name":"minorExpected","description":"Whether the account is expected to be run by a minor","type":[[["boolean"]]],"meta":{"line":105,"file":"ClientUser.js","path":"src/structs"}},{"name":"minorStatus","description":"The minor status of the client's Epic Games account","type":[[["string"]]],"meta":{"line":111,"file":"ClientUser.js","path":"src/structs"}},{"name":"displayName","description":"The user's name","type":[[["string"]]],"meta":{"line":20,"file":"User.js","path":"src/structs"}},{"name":"id","description":"The user's id","type":[[["string"]]],"meta":{"line":26,"file":"User.js","path":"src/structs"}},{"name":"externalAuths","description":"The user's external auths","type":[[["Object"]]],"meta":{"line":32,"file":"User.js","path":"src/structs"}},{"name":"links","description":"The user's linked accounts","type":[[["Object"]]],"meta":{"line":38,"file":"User.js","path":"src/structs"}}],"methods":[{"name":"addFriend","description":"Adds this user as a friend or accepts its friend request","inherits":"User#addFriend","inherited":true,"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":51,"file":"User.js","path":"src/structs"}},{"name":"fetch","description":"Updates this user's display name, external auths and links","inherits":"User#fetch","inherited":true,"async":true,"returns":{"types":[[["Promise","<"],["User",">"]]],"description":"This user"},"meta":{"line":59,"file":"User.js","path":"src/structs"}},{"name":"fetchStats","description":"Fetches the v2 stats for this user","inherits":"User#fetchStats","inherited":true,"params":[{"name":"startTime","description":"The timestamp to start fetching stats from; can be null/undefined for lifetime","nullable":true,"type":[[["number"]]]},{"name":"endTime","description":"The timestamp to stop fetching stats from; can be undefined for lifetime","nullable":true,"type":[[["number"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Object",">"]]],"description":"The user's stats"},"meta":{"line":73,"file":"User.js","path":"src/structs"}}],"meta":{"line":12,"file":"ClientUser.js","path":"src/structs"}},{"name":"CreatorCode","description":"Represents a Support-A-Creator code","construct":{"name":"CreatorCode","params":[{"name":"client","description":"The main client","type":[[["Object"]]]},{"name":"data","description":"The creator code data","type":[[["Object"]]]}]},"props":[{"name":"code","description":"The Support-A-Creator code","type":[[["string"]]],"meta":{"line":17,"file":"CreatorCode.js","path":"src/structs"}},{"name":"owner","description":"The owner of the Support-A-Creator code","type":[[["User"]]],"meta":{"line":23,"file":"CreatorCode.js","path":"src/structs"}},{"name":"status","description":"The status of a Support-A-Creator code","type":[[["CreatorCodeStatus"]]],"meta":{"line":29,"file":"CreatorCode.js","path":"src/structs"}},{"name":"verified","description":"Whether the Support-A-Creator code is verified","type":[[["boolean"]]],"meta":{"line":35,"file":"CreatorCode.js","path":"src/structs"}}],"meta":{"line":9,"file":"CreatorCode.js","path":"src/structs"}},{"name":"Friend","description":"Represents an Epic Games friend of a client","extends":[[["User"]]],"construct":{"name":"Friend","params":[{"name":"client","description":"The main client","type":[[["Client"]]]},{"name":"data","description":"The friend data","type":[[["Object"]]]}]},"props":[{"name":"connections","description":"The connections of the friend","type":[[["Array"]]],"meta":{"line":20,"file":"Friend.js","path":"src/structs"}},{"name":"mutualFriends","description":"The count of mutual friends","type":[[["number"]]],"meta":{"line":26,"file":"Friend.js","path":"src/structs"}},{"name":"favorite","description":"Whether this friend is a favourite one or not","type":[[["boolean"]]],"meta":{"line":32,"file":"Friend.js","path":"src/structs"}},{"name":"createdAt","description":"The date when the friendship was created","type":[[["Date"]]],"meta":{"line":38,"file":"Friend.js","path":"src/structs"}},{"name":"note","description":"The note for this friend","type":[[["string"]]],"meta":{"line":44,"file":"Friend.js","path":"src/structs"}},{"name":"alias","description":"The alias of this friend","type":[[["string"]]],"meta":{"line":50,"file":"Friend.js","path":"src/structs"}},{"name":"presence","description":"The last recieved presence of this friend","type":[[["FriendPresence"]]],"meta":{"line":56,"file":"Friend.js","path":"src/structs"}},{"name":"isOnline","description":"Whether a user is online or not\nCan be inaccurate as it uses the receive date of the last presence","readonly":true,"type":[[["boolean"]]],"meta":{"line":65,"file":"Friend.js","path":"src/structs"}},{"name":"isJoinable","description":"Whether the client can join this friend's party or not\nMay be slighly inaccurate as it uses the last received presence","readonly":true,"type":[[["boolean"]]],"meta":{"line":76,"file":"Friend.js","path":"src/structs"}},{"name":"displayName","description":"The user's name","type":[[["string"]]],"meta":{"line":20,"file":"User.js","path":"src/structs"}},{"name":"id","description":"The user's id","type":[[["string"]]],"meta":{"line":26,"file":"User.js","path":"src/structs"}},{"name":"externalAuths","description":"The user's external auths","type":[[["Object"]]],"meta":{"line":32,"file":"User.js","path":"src/structs"}},{"name":"links","description":"The user's linked accounts","type":[[["Object"]]],"meta":{"line":38,"file":"User.js","path":"src/structs"}}],"methods":[{"name":"remove","description":"Removes this friend","async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":85,"file":"Friend.js","path":"src/structs"}},{"name":"sendMessage","description":"Sends a message to this friend","params":[{"name":"message","description":"The message that will be sent","type":[[["String"]]]}],"async":true,"returns":[[["Promise","<"],["FriendMessage",">"]]],"meta":{"line":94,"file":"Friend.js","path":"src/structs"}},{"name":"invite","description":"Sends a party invitation to this friend","async":true,"returns":[[["Promise","<"],["SentPartyInvitation",">"]]],"meta":{"line":102,"file":"Friend.js","path":"src/structs"}},{"name":"block","description":"Blocks this friend","async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":111,"file":"Friend.js","path":"src/structs"}},{"name":"joinParty","description":"Joins this friend's party","async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":119,"file":"Friend.js","path":"src/structs"}},{"name":"addFriend","description":"Adds this user as a friend or accepts its friend request","inherits":"User#addFriend","inherited":true,"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":51,"file":"User.js","path":"src/structs"}},{"name":"fetch","description":"Updates this user's display name, external auths and links","inherits":"User#fetch","inherited":true,"async":true,"returns":{"types":[[["Promise","<"],["User",">"]]],"description":"This user"},"meta":{"line":59,"file":"User.js","path":"src/structs"}},{"name":"fetchStats","description":"Fetches the v2 stats for this user","inherits":"User#fetchStats","inherited":true,"params":[{"name":"startTime","description":"The timestamp to start fetching stats from; can be null/undefined for lifetime","nullable":true,"type":[[["number"]]]},{"name":"endTime","description":"The timestamp to stop fetching stats from; can be undefined for lifetime","nullable":true,"type":[[["number"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Object",">"]]],"description":"The user's stats"},"meta":{"line":73,"file":"User.js","path":"src/structs"}}],"meta":{"line":13,"file":"Friend.js","path":"src/structs"}},{"name":"FriendMessage","description":"Represents a friend message","props":[{"name":"content","description":"The content of the friend message","type":[[["string"]]],"meta":{"line":17,"file":"FriendMessage.js","path":"src/structs"}},{"name":"author","description":"The friend who sent the message","type":[[["Friend"]]],"meta":{"line":23,"file":"FriendMessage.js","path":"src/structs"}}],"methods":[{"name":"reply","description":"Replies to the friend message","params":[{"name":"message","description":"The message that will be sent","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["FriendMessage",">"]]],"meta":{"line":31,"file":"FriendMessage.js","path":"src/structs"}}],"meta":{"line":5,"file":"FriendMessage.js","path":"src/structs"}},{"name":"FriendPresence","description":"Represents the presence of a friend","construct":{"name":"FriendPresence","params":[{"name":"client","description":"The main client","type":[[["Object"]]]},{"name":"data","description":"The presence's data","type":[[["Object"]]]},{"name":"fromId","description":"The id of friend this presence belongs to","type":[[["string"]]]}]},"props":[{"name":"friend","description":"The friend this presence belongs to","type":[[["string"]]],"meta":{"line":19,"file":"FriendPresence.js","path":"src/structs"}},{"name":"status","description":"The status of this friend presence","type":[[["string"]]],"meta":{"line":27,"file":"FriendPresence.js","path":"src/structs"}},{"name":"recievedAt","description":"The date when this presence was recieved","type":[[["Date"]]],"meta":{"line":33,"file":"FriendPresence.js","path":"src/structs"}},{"name":"isInKairos","description":"Whether the friend is in Kairos (Party Hub) or not","type":[[["boolean"]]],"meta":{"line":39,"file":"FriendPresence.js","path":"src/structs"}},{"name":"isPlaying","description":"Whether the friend is playing or not","type":[[["boolean"]]],"meta":{"line":45,"file":"FriendPresence.js","path":"src/structs"}},{"name":"isJoinable","description":"Whether the friend's party is joinable or not","type":[[["boolean"]]],"meta":{"line":51,"file":"FriendPresence.js","path":"src/structs"}},{"name":"hasVoiceSupport","description":"Whether the friend has voice support or not","type":[[["boolean"]]],"meta":{"line":57,"file":"FriendPresence.js","path":"src/structs"}},{"name":"sessionId","description":"The id of the game session the friend is currently in","nullable":true,"type":[[["string"]]],"meta":{"line":63,"file":"FriendPresence.js","path":"src/structs"}},{"name":"avatar","description":"The Kairos avatar of this friend presence","type":[[["FPKairosAvatar"]]],"meta":{"line":72,"file":"FriendPresence.js","path":"src/structs"}},{"name":"homebaseRating","description":"The rating of the friend's SaveTheWorld homebase","nullable":true,"type":[[["string"]]],"meta":{"line":81,"file":"FriendPresence.js","path":"src/structs"}},{"name":"subGame","description":"The subgame the friend is in","nullable":true,"type":[[["string"]]],"meta":{"line":87,"file":"FriendPresence.js","path":"src/structs"}},{"name":"isInUnjoinableMatch","description":"Whether the friend is in an unjoinable match or not","nullable":true,"type":[[["boolean"]]],"meta":{"line":93,"file":"FriendPresence.js","path":"src/structs"}},{"name":"playlist","description":"The friend's current selected playlist","nullable":true,"type":[[["string"]]],"meta":{"line":99,"file":"FriendPresence.js","path":"src/structs"}},{"name":"partySize","description":"The member count of the friend's party","nullable":true,"type":[[["number"]]],"meta":{"line":105,"file":"FriendPresence.js","path":"src/structs"}},{"name":"partyMaxSize","description":"The max members of the friend's party","nullable":true,"type":[[["number"]]],"meta":{"line":111,"file":"FriendPresence.js","path":"src/structs"}},{"name":"gameSessionJoinKey","description":"The join key of the game session the friend is currently in (if the game session is joinable)","nullable":true,"type":[[["string"]]],"meta":{"line":117,"file":"FriendPresence.js","path":"src/structs"}},{"name":"gameplayStats","description":"The stats of the game the friend is currently in","type":[[["FPGameplayStats"]]],"meta":{"line":125,"file":"FriendPresence.js","path":"src/structs"}},{"name":"partyData","description":"The data of the party this friend is currently in","type":[[["FPPartyData"]]],"meta":{"line":145,"file":"FriendPresence.js","path":"src/structs"}}],"meta":{"line":12,"file":"FriendPresence.js","path":"src/structs"}},{"name":"News","description":"Represents a fortnite news message","construct":{"name":"News","params":[{"name":"client","description":"The main client","type":[[["Client"]]]},{"name":"data","description":"The news data","type":[[["Object"]]]}]},"props":[{"name":"id","description":"The news message id","type":[[["string"]]],"meta":{"line":19,"file":"News.js","path":"src/structs"}},{"name":"title","description":"The news message title","type":[[["string"]]],"meta":{"line":25,"file":"News.js","path":"src/structs"}},{"name":"body","description":"The news message body","type":[[["string"]]],"meta":{"line":31,"file":"News.js","path":"src/structs"}},{"name":"buttonTextOverride","description":"The news message button text override","type":[[["string"]]],"meta":{"line":37,"file":"News.js","path":"src/structs"}},{"name":"tabTitleOverride","description":"The news message tab title override","type":[[["string"]]],"meta":{"line":43,"file":"News.js","path":"src/structs"}},{"name":"hidden","description":"Whether the news message is hidden","type":[[["boolean"]]],"meta":{"line":49,"file":"News.js","path":"src/structs"}},{"name":"entryType","description":"The news message entry type","type":[[["string"]]],"meta":{"line":55,"file":"News.js","path":"src/structs"}},{"name":"sortingPriority","description":"The news message sorting priority","type":[[["number"]]],"meta":{"line":61,"file":"News.js","path":"src/structs"}},{"name":"spotlight","description":"Whether the news message contains a spotlight","type":[[["boolean"]]],"meta":{"line":67,"file":"News.js","path":"src/structs"}},{"name":"images","description":"The news message image urls","type":[[["Object","<"],["string",", "],["string",">"]]],"meta":{"line":73,"file":"News.js","path":"src/structs"}},{"name":"video","description":"The news message video data","type":[[["Object","<"],["string",", ("],["string","|"],["boolean",")>"]]],"meta":{"line":82,"file":"News.js","path":"src/structs"}},{"name":"offer","description":"The news message offer data","type":[[["Object","<"],["string",", "],["string",">"]]],"meta":{"line":96,"file":"News.js","path":"src/structs"}}],"methods":[{"name":"downloadVideo","description":"Download the news video (if available)","examples":["fs.writeFile('./video.m3u8', await news.downloadVideo('kDrsgRdgDiQrNOSu', Enums.Language.ENGLISH, '1920x1080'));\nin cmd: ffmpeg -protocol_whitelist https,file,tcp,tls -i ./video.m3u8 ./newsVid.mp4"],"params":[{"name":"language","description":"The video language","type":[[["Language"]]]},{"name":"resolution","description":"The video resolution (1920x1080, 1152x656, 1280x720, 864x480, 640x368, 512x288)","default":"1920x1080","type":[[["string"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Buffer",">"]]],"description":"The m3u8 video file as a buffer"},"meta":{"line":111,"file":"News.js","path":"src/structs"}}],"meta":{"line":12,"file":"News.js","path":"src/structs"}},{"name":"Party","description":"Represents a party","construct":{"name":"Party","params":[{"name":"client","description":"The main client","type":[[["Client"]]]},{"name":"data","description":"The party's data","type":[[["Object"]]]}]},"props":[{"name":"id","description":"The id of this party","type":[[["string"]]],"meta":{"line":28,"file":"Party.js","path":"src/structs"}},{"name":"createdAt","description":"The date when this party was created","type":[[["Date"]]],"meta":{"line":34,"file":"Party.js","path":"src/structs"}},{"name":"config","description":"The config of this party","type":[[["ClientOptionspartyConfig"]]],"meta":{"line":40,"file":"Party.js","path":"src/structs"}},{"name":"members","description":"The members of this party","type":[[["Collection"]]],"meta":{"line":46,"file":"Party.js","path":"src/structs"}},{"name":"currentlyPatching","description":"Whether the party is currently sending a patch","type":[[["boolean"]]],"meta":{"line":56,"file":"Party.js","path":"src/structs"}},{"name":"patchQueue","description":"The patches queue","type":[[["Array"]]],"meta":{"line":62,"file":"Party.js","path":"src/structs"}},{"name":"meta","description":"The meta of this party","type":[[["PartyMeta"]]],"meta":{"line":68,"file":"Party.js","path":"src/structs"}},{"name":"chat","description":"The chat room of this party","type":[[["PartyChat"]]],"meta":{"line":74,"file":"Party.js","path":"src/structs"}},{"name":"revision","description":"The revision of this party","type":[[["number"]]],"meta":{"line":80,"file":"Party.js","path":"src/structs"}},{"name":"patchAssignmentsLocked","description":"If squad assignments should be auto patched","type":[[["boolean"]]],"meta":{"line":86,"file":"Party.js","path":"src/structs"}},{"name":"me","description":"The client's party member","readonly":true,"type":[[["ClientPartyMember"]]],"meta":{"line":96,"file":"Party.js","path":"src/structs"}},{"name":"leader","description":"The leader of this party","readonly":true,"type":[[["PartyMember"]]],"meta":{"line":105,"file":"Party.js","path":"src/structs"}},{"name":"isPrivate","description":"Whether this party is private or not","readonly":true,"type":[[["boolean"]]],"meta":{"line":114,"file":"Party.js","path":"src/structs"}}],"methods":[{"name":"join","description":"Joins this party","async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":122,"file":"Party.js","path":"src/structs"}},{"name":"patchPresence","description":"Sends an updated presence","access":"private","returns":[[["Promise","<"],["void",">"]]],"meta":{"line":173,"file":"Party.js","path":"src/structs"}},{"name":"sendMessage","description":"Sends a message to the chat of this party","params":[{"name":"message","description":"The message that will be sent","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["PartyMessage",">"]]],"meta":{"line":228,"file":"Party.js","path":"src/structs"}},{"name":"invite","description":"Sends a party invitation to a friend","params":[{"name":"friend","description":"The friend's id or display name","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["SentPartyInvitation",">"]]],"meta":{"line":237,"file":"Party.js","path":"src/structs"}},{"name":"leave","description":"Leaves this party","params":[{"name":"createNew","description":"Whether a new party should be created or not","default":true,"type":[[["boolean"]]]}],"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":268,"file":"Party.js","path":"src/structs"}},{"name":"sendPatch","description":"Sends a patch with the latest meta","access":"private","params":[{"name":"updated","description":"The updated data","type":[[["Object"]]]},{"name":"deleted","description":"The deleted data","type":[[["Array"]]]},{"name":"isForced","description":"Whether this patch should ignore this.currentlyPatching","default":false,"type":[[["boolean"]]]}],"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":295,"file":"Party.js","path":"src/structs"}},{"name":"update","description":"Updates the party's meta","access":"private","params":[{"name":"data","description":"The updated data","type":[[["Object"]]]}],"returns":[[["void"]]],"meta":{"line":350,"file":"Party.js","path":"src/structs"}},{"name":"setPrivacy","description":"Sets this party's privacy","params":[{"name":"privacy","description":"The new privacy","type":[[["PartyPrivacy"]]]},{"name":"patch","description":"Whether to also patch the party or not (Should always be true)","default":true,"nullable":true,"type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Object",">"]]],"description":"The updated and deleted meta keys and values"},"meta":{"line":376,"file":"Party.js","path":"src/structs"}},{"name":"setCustomMatchmakingKey","description":"Sets this party's custom matchmaking key","params":[{"name":"key","description":"The custom matchmaking key","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":424,"file":"Party.js","path":"src/structs"}},{"name":"promote","description":"Promotes a party member","params":[{"name":"member","description":"The id or display name of the member that will be promoted","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":437,"file":"Party.js","path":"src/structs"}},{"name":"kick","description":"Kicks a party member","params":[{"name":"member","description":"The member that will be kicked","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":451,"file":"Party.js","path":"src/structs"}},{"name":"refreshSquadAssignments","description":"Refreshes the party members' positions","access":"private","async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":465,"file":"Party.js","path":"src/structs"}},{"name":"hideMembers","description":"Hides all party members except for the client","params":[{"name":"hide","description":"whether to hide or unhide","default":true,"type":[[["boolean"]]]}],"async":true,"meta":{"line":473,"file":"Party.js","path":"src/structs"}},{"name":"setPlaylist","description":"Set the parties playlist","params":[{"name":"playlist","description":"the playlist","type":[[["Playlist"]]]}],"async":true,"meta":{"line":492,"file":"Party.js","path":"src/structs"}},{"name":"LookupSelf","description":"Lookups for the client user's party","scope":"static","params":[{"name":"client","description":"The main client","type":[[["Client"]]]}],"async":true,"returns":[[["Promise","<"],["Party",">"]]],"meta":{"line":512,"file":"Party.js","path":"src/structs"}},{"name":"Lookup","description":"Lookups for a public party","scope":"static","params":[{"name":"client","description":"The main client","type":[[["Client"]]]},{"name":"id","description":"The id of the party","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["Party",">"]]],"meta":{"line":525,"file":"Party.js","path":"src/structs"}},{"name":"Create","description":"Creates a party","scope":"static","params":[{"name":"client","description":"The main client","type":[[["Client"]]]}],"async":true,"returns":[[["Promise","<"],["Party",">"]]],"meta":{"line":537,"file":"Party.js","path":"src/structs"}}],"meta":{"line":20,"file":"Party.js","path":"src/structs"}},{"name":"PartyChat","description":"Represents the chat room of a party","construct":{"name":"PartyChat","params":[{"name":"party","description":"The chatroom's party","type":[[["Object"]]]}]},"props":[{"name":"connected","description":"Whether the client is connected to the chat room or not","type":[[["boolean"]]],"meta":{"line":19,"file":"PartyChat.js","path":"src/structs"}},{"name":"jid","description":"The jid of this chat room","type":[[["string"]]],"meta":{"line":25,"file":"PartyChat.js","path":"src/structs"}},{"name":"nick","description":"The nick of the client's user in this chat room","type":[[["string"]]],"meta":{"line":31,"file":"PartyChat.js","path":"src/structs"}}],"methods":[{"name":"send","description":"Sends a message to this chat room","params":[{"name":"message","description":"The message to be sent","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["PartyMessage",">"]]],"meta":{"line":39,"file":"PartyChat.js","path":"src/structs"}},{"name":"join","description":"Joins this chat room","returns":[[["Promise","<"],["void",">"]]],"meta":{"line":56,"file":"PartyChat.js","path":"src/structs"}},{"name":"leave","description":"Leaves this chat room","returns":[[["Promise","<"],["void",">"]]],"meta":{"line":68,"file":"PartyChat.js","path":"src/structs"}},{"name":"waitForConnected","description":"Waits until the client is connected to this chatroom","returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":80,"file":"PartyChat.js","path":"src/structs"}}],"meta":{"line":10,"file":"PartyChat.js","path":"src/structs"}},{"name":"PartyInvitation","description":"Represents party invitation","construct":{"name":"PartyInvitation","params":[{"name":"client","description":"The main client","type":[[["Client"]]]},{"name":"party","description":"The invitation's party","type":[[["Party"]]]},{"name":"data","description":"The invitation's data","type":[[["Object"]]]}]},"props":[{"name":"party","description":"The party of this invitation","type":[[["Party"]]],"meta":{"line":20,"file":"PartyInvitation.js","path":"src/structs"}},{"name":"sender","description":"The friend that sent this invitation","type":[[["Friend"]]],"meta":{"line":26,"file":"PartyInvitation.js","path":"src/structs"}},{"name":"createdAt","description":"The Date when the party invitation was created","type":[[["Date"]]],"meta":{"line":32,"file":"PartyInvitation.js","path":"src/structs"}},{"name":"expiresAt","description":"The Date when the party invitation will expire","type":[[["Date"]]],"meta":{"line":38,"file":"PartyInvitation.js","path":"src/structs"}},{"name":"expired","description":"Whether this party invitation is expired or not","type":[[["boolean"]]],"meta":{"line":44,"file":"PartyInvitation.js","path":"src/structs"}}],"methods":[{"name":"accept","description":"Accepts this party invitation","async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":55,"file":"PartyInvitation.js","path":"src/structs"}},{"name":"decline","description":"Declines this party invitation","async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":68,"file":"PartyInvitation.js","path":"src/structs"}},{"name":"createInvite","description":"Creates an invite data object","scope":"static","access":"private","params":[{"name":"client","description":"The main client","type":[[["Client"]]]},{"name":"pingerId","description":"The pinger's account id","type":[[["string"]]]},{"name":"data","description":"The invite data","type":[[["Object"]]]}],"returns":[[["Object"]]],"meta":{"line":84,"file":"PartyInvitation.js","path":"src/structs"}}],"meta":{"line":13,"file":"PartyInvitation.js","path":"src/structs"}},{"name":"PartyMember","description":"Represents a party member","construct":{"name":"PartyMember","params":[{"name":"party","description":"The member's party","type":[]},{"name":"data","description":"The member's data","type":[]}]},"props":[{"name":"id","description":"The id of the party member","type":[[["string"]]],"meta":{"line":20,"file":"PartyMember.js","path":"src/structs"}},{"name":"displayName","description":"The display name of the party member","type":[[["string"]]],"meta":{"line":26,"file":"PartyMember.js","path":"src/structs"}},{"name":"role","description":"The role of the party member","type":[[["string"]]],"meta":{"line":33,"file":"PartyMember.js","path":"src/structs"}},{"name":"joinedAt","description":"The Date when this member joined the party","type":[[["Date"]]],"meta":{"line":39,"file":"PartyMember.js","path":"src/structs"}},{"name":"meta","description":"The meta of this party member","type":[[["PartyMemberMeta"]]],"meta":{"line":45,"file":"PartyMember.js","path":"src/structs"}},{"name":"pickaxe","description":"The id of this party member's pickaxe","readonly":true,"type":[[["string"]]],"meta":{"line":53,"file":"PartyMember.js","path":"src/structs"}},{"name":"outfit","description":"The id of this party member's outfit","readonly":true,"type":[[["string"]]],"meta":{"line":62,"file":"PartyMember.js","path":"src/structs"}},{"name":"emote","description":"The id of this party member's emote","readonly":true,"type":[[["string"]]],"meta":{"line":71,"file":"PartyMember.js","path":"src/structs"}},{"name":"backpack","description":"The id of this party member's backpack","readonly":true,"type":[[["string"]]],"meta":{"line":82,"file":"PartyMember.js","path":"src/structs"}},{"name":"isReady","description":"Whether this party member is ready or not","readonly":true,"type":[[["boolean"]]],"meta":{"line":93,"file":"PartyMember.js","path":"src/structs"}},{"name":"isLeader","description":"Whether this member is the leader of the party","readonly":true,"type":[[["boolean"]]],"meta":{"line":102,"file":"PartyMember.js","path":"src/structs"}}],"methods":[{"name":"kick","description":"Kicks this member from the party","async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":110,"file":"PartyMember.js","path":"src/structs"}},{"name":"promote","description":"Promotes this member to the party leader","async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":118,"file":"PartyMember.js","path":"src/structs"}},{"name":"fetch","description":"Fetch or update this members display name","async":true,"meta":{"line":125,"file":"PartyMember.js","path":"src/structs"}},{"name":"update","description":"Updates the party member's meta","access":"private","params":[{"name":"data","description":"The updated meta","type":[[["Object"]]]}],"returns":[[["void"]]],"meta":{"line":136,"file":"PartyMember.js","path":"src/structs"}}],"meta":{"line":11,"file":"PartyMember.js","path":"src/structs"}},{"name":"PartyMemberMeta","description":"Represents a party member's meta","extends":[[["Meta"]]],"access":"private","construct":{"name":"PartyMemberMeta","params":[{"name":"member","description":"The party member","type":[[["Object"]]]},{"name":"meta","description":"The meta","type":[[["Object"]]]}]},"props":[{"name":"schema","description":"The meta's schema","type":[[["Object"]]],"meta":{"line":34,"file":"PartyMemberMeta.js","path":"src/structs"}}],"methods":[{"name":"set","description":"Sets a value","inherits":"Meta#set","inherited":true,"params":[{"name":"prop","description":"The property","type":[[["string"]]]},{"name":"val","description":"The value","type":[["*"]]},{"name":"isRaw","description":"Whether the value is raw or not","type":[[["boolean"]]]},{"name":"isObject","description":"Whether the value is an object or not","type":[[["boolean"]]]}],"returns":{"types":[["*"]],"description":"The setted value"},"meta":{"line":18,"file":"Meta.js","path":"src/util"}},{"name":"get","description":"Gets a value by its property","inherits":"Meta#get","inherited":true,"params":[{"name":"prop","description":"The property","type":[[["string"]]]},{"name":"isRaw","description":"Whether the value should be returned raw","type":[[["boolean"]]]}],"returns":{"types":[["*"]],"description":"The value of the provided property"},"meta":{"line":46,"file":"Meta.js","path":"src/util"}},{"name":"update","description":"Updates the schema","inherits":"Meta#update","inherited":true,"params":[{"name":"schema","description":"The new schema","type":[[["Object"]]]},{"name":"isRaw","description":"Whether the values are raw or not","type":[[["boolean"]]]}],"returns":[[["void"]]],"meta":{"line":71,"file":"Meta.js","path":"src/util"}},{"name":"remove","description":"Removes provided schema properties","inherits":"Meta#remove","inherited":true,"params":[{"name":"schema","description":"The properties to delete","type":[[["Array"]]]}],"returns":[[["void"]]],"meta":{"line":80,"file":"Meta.js","path":"src/util"}}],"meta":{"line":13,"file":"PartyMemberMeta.js","path":"src/structs"}},{"name":"PartyMessage","description":"Represents a party message","props":[{"name":"content","description":"The content of the party message","type":[[["string"]]],"meta":{"line":18,"file":"PartyMessage.js","path":"src/structs"}},{"name":"author","description":"The author of the party message","type":[[["PartyMember"]]],"meta":{"line":24,"file":"PartyMessage.js","path":"src/structs"}}],"methods":[{"name":"reply","description":"Replies to this party message","params":[{"name":"message","description":"The message","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["PartyMessage",">"]]],"meta":{"line":32,"file":"PartyMessage.js","path":"src/structs"}}],"meta":{"line":5,"file":"PartyMessage.js","path":"src/structs"}},{"name":"PartyMeta","description":"Represents the meta of a party","extends":[[["Meta"]]],"access":"private","construct":{"name":"PartyMeta","params":[{"name":"party","description":"The party","type":[[["Party"]]]},{"name":"meta","description":"The meta","type":[[["Object"]]]}]},"props":[{"name":"schema","description":"The schema","type":[[["Object"]]],"meta":{"line":22,"file":"PartyMeta.js","path":"src/structs"}}],"methods":[{"name":"updateSquadAssignments","description":"Updates the party members' positions","returns":[[["Object"]]],"meta":{"line":72,"file":"PartyMeta.js","path":"src/structs"}},{"name":"set","description":"Sets a value","inherits":"Meta#set","inherited":true,"params":[{"name":"prop","description":"The property","type":[[["string"]]]},{"name":"val","description":"The value","type":[["*"]]},{"name":"isRaw","description":"Whether the value is raw or not","type":[[["boolean"]]]},{"name":"isObject","description":"Whether the value is an object or not","type":[[["boolean"]]]}],"returns":{"types":[["*"]],"description":"The setted value"},"meta":{"line":18,"file":"Meta.js","path":"src/util"}},{"name":"get","description":"Gets a value by its property","inherits":"Meta#get","inherited":true,"params":[{"name":"prop","description":"The property","type":[[["string"]]]},{"name":"isRaw","description":"Whether the value should be returned raw","type":[[["boolean"]]]}],"returns":{"types":[["*"]],"description":"The value of the provided property"},"meta":{"line":46,"file":"Meta.js","path":"src/util"}},{"name":"update","description":"Updates the schema","inherits":"Meta#update","inherited":true,"params":[{"name":"schema","description":"The new schema","type":[[["Object"]]]},{"name":"isRaw","description":"Whether the values are raw or not","type":[[["boolean"]]]}],"returns":[[["void"]]],"meta":{"line":71,"file":"Meta.js","path":"src/util"}},{"name":"remove","description":"Removes provided schema properties","inherits":"Meta#remove","inherited":true,"params":[{"name":"schema","description":"The properties to delete","type":[[["Array"]]]}],"returns":[[["void"]]],"meta":{"line":80,"file":"Meta.js","path":"src/util"}}],"meta":{"line":13,"file":"PartyMeta.js","path":"src/structs"}},{"name":"PendingFriend","description":"Represents a pending friend / friend request","extends":[[["User"]]],"construct":{"name":"PendingFriend","params":[{"name":"client","description":"The main client","type":[[["Client"]]]},{"name":"data","description":"The pending friend data","type":[[["Object"]]]}]},"props":[{"name":"direction","description":"The direction of the friend request","type":[[["PendingFriendDirection"]]],"meta":{"line":19,"file":"PendingFriend.js","path":"src/structs"}},{"name":"createdAt","description":"The Date when the friend request was created","nullable":true,"type":[[["Date"]]],"meta":{"line":25,"file":"PendingFriend.js","path":"src/structs"}},{"name":"displayName","description":"The user's name","type":[[["string"]]],"meta":{"line":20,"file":"User.js","path":"src/structs"}},{"name":"id","description":"The user's id","type":[[["string"]]],"meta":{"line":26,"file":"User.js","path":"src/structs"}},{"name":"externalAuths","description":"The user's external auths","type":[[["Object"]]],"meta":{"line":32,"file":"User.js","path":"src/structs"}},{"name":"links","description":"The user's linked accounts","type":[[["Object"]]],"meta":{"line":38,"file":"User.js","path":"src/structs"}}],"methods":[{"name":"accept","description":"Accepts the friend request","async":true,"returns":[[["Promise","<"],["Friend",">"]]],"meta":{"line":32,"file":"PendingFriend.js","path":"src/structs"}},{"name":"reject","description":"Rejects this friend request","async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":41,"file":"PendingFriend.js","path":"src/structs"}},{"name":"abort","description":"Aborts this friend request","async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":49,"file":"PendingFriend.js","path":"src/structs"}},{"name":"block","description":"Blocks this request's friend","async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":57,"file":"PendingFriend.js","path":"src/structs"}},{"name":"addFriend","description":"Adds this user as a friend or accepts its friend request","inherits":"User#addFriend","inherited":true,"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":51,"file":"User.js","path":"src/structs"}},{"name":"fetch","description":"Updates this user's display name, external auths and links","inherits":"User#fetch","inherited":true,"async":true,"returns":{"types":[[["Promise","<"],["User",">"]]],"description":"This user"},"meta":{"line":59,"file":"User.js","path":"src/structs"}},{"name":"fetchStats","description":"Fetches the v2 stats for this user","inherits":"User#fetchStats","inherited":true,"params":[{"name":"startTime","description":"The timestamp to start fetching stats from; can be null/undefined for lifetime","nullable":true,"type":[[["number"]]]},{"name":"endTime","description":"The timestamp to stop fetching stats from; can be undefined for lifetime","nullable":true,"type":[[["number"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Object",">"]]],"description":"The user's stats"},"meta":{"line":73,"file":"User.js","path":"src/structs"}}],"meta":{"line":12,"file":"PendingFriend.js","path":"src/structs"}},{"name":"SentPartyInvitation","description":"Represents a party invitation sent by the client's user","construct":{"name":"SentPartyInvitation","params":[{"name":"client","description":"The main client","type":[[["Client"]]]},{"name":"party","description":"The invitation's party","type":[[["Party"]]]},{"name":"receiver","description":"The invitation's receiver","type":[[["Friend"]]]},{"name":"data","description":"The invitation's data","type":[[["Object"]]]}]},"props":[{"name":"party","description":"The party of this invitation","type":[[["Party"]]],"meta":{"line":20,"file":"SentPartyInvitation.js","path":"src/structs"}},{"name":"receiver","description":"The friend who received this party invitation","type":[[["Friend"]]],"meta":{"line":26,"file":"SentPartyInvitation.js","path":"src/structs"}},{"name":"createdAt","description":"The Date when this party invitation was created","type":[[["Date"]]],"meta":{"line":32,"file":"SentPartyInvitation.js","path":"src/structs"}},{"name":"expired","description":"Whether this party invitation is expired or not","type":[[["boolean"]]],"meta":{"line":38,"file":"SentPartyInvitation.js","path":"src/structs"}}],"methods":[{"name":"cancel","description":"Cancels the party invitation","async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":49,"file":"SentPartyInvitation.js","path":"src/structs"}},{"name":"resend","description":"Resends the party invitation","async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":61,"file":"SentPartyInvitation.js","path":"src/structs"}}],"meta":{"line":13,"file":"SentPartyInvitation.js","path":"src/structs"}},{"name":"User","description":"Represents a user","construct":{"name":"User","params":[{"name":"client","description":"The main client","type":[[["Client"]]]},{"name":"data","description":"The user's data","type":[[["Object"]]]}]},"props":[{"name":"displayName","description":"The user's name","type":[[["string"]]],"meta":{"line":20,"file":"User.js","path":"src/structs"}},{"name":"id","description":"The user's id","type":[[["string"]]],"meta":{"line":26,"file":"User.js","path":"src/structs"}},{"name":"externalAuths","description":"The user's external auths","type":[[["Object"]]],"meta":{"line":32,"file":"User.js","path":"src/structs"}},{"name":"links","description":"The user's linked accounts","type":[[["Object"]]],"meta":{"line":38,"file":"User.js","path":"src/structs"}}],"methods":[{"name":"addFriend","description":"Adds this user as a friend or accepts its friend request","async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":51,"file":"User.js","path":"src/structs"}},{"name":"fetch","description":"Updates this user's display name, external auths and links","async":true,"returns":{"types":[[["Promise","<"],["User",">"]]],"description":"This user"},"meta":{"line":59,"file":"User.js","path":"src/structs"}},{"name":"fetchStats","description":"Fetches the v2 stats for this user","params":[{"name":"startTime","description":"The timestamp to start fetching stats from; can be null/undefined for lifetime","nullable":true,"type":[[["number"]]]},{"name":"endTime","description":"The timestamp to stop fetching stats from; can be undefined for lifetime","nullable":true,"type":[[["number"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Object",">"]]],"description":"The user's stats"},"meta":{"line":73,"file":"User.js","path":"src/structs"}}],"meta":{"line":12,"file":"User.js","path":"src/structs"}},{"name":"Meta","description":"Represents a meta structure used for parties","access":"private","methods":[{"name":"set","description":"Sets a value","params":[{"name":"prop","description":"The property","type":[[["string"]]]},{"name":"val","description":"The value","type":[["*"]]},{"name":"isRaw","description":"Whether the value is raw or not","type":[[["boolean"]]]},{"name":"isObject","description":"Whether the value is an object or not","type":[[["boolean"]]]}],"returns":{"types":[["*"]],"description":"The setted value"},"meta":{"line":18,"file":"Meta.js","path":"src/util"}},{"name":"get","description":"Gets a value by its property","params":[{"name":"prop","description":"The property","type":[[["string"]]]},{"name":"isRaw","description":"Whether the value should be returned raw","type":[[["boolean"]]]}],"returns":{"types":[["*"]],"description":"The value of the provided property"},"meta":{"line":46,"file":"Meta.js","path":"src/util"}},{"name":"update","description":"Updates the schema","params":[{"name":"schema","description":"The new schema","type":[[["Object"]]]},{"name":"isRaw","description":"Whether the values are raw or not","type":[[["boolean"]]]}],"returns":[[["void"]]],"meta":{"line":71,"file":"Meta.js","path":"src/util"}},{"name":"remove","description":"Removes provided schema properties","params":[{"name":"schema","description":"The properties to delete","type":[[["Array"]]]}],"returns":[[["void"]]],"meta":{"line":80,"file":"Meta.js","path":"src/util"}}],"meta":{"line":6,"file":"Meta.js","path":"src/util"}}],"interfaces":[],"typedefs":[{"name":"PartyPrivacy","description":"Represents the privacy of a party:\n* `PUBLIC` - anyone can join the party\n* `FRIENDS_ALLOW_FRIENDS_OF_FRIENDS` - the client's friends and their friends can join the party\n* `FRIENDS` - the client's friends can join the party\n* `PRIVATE_ALLOW_FRIENDS_OF_FRIENDS` - the client's friends and their friends can join the party only with an invite\n* `PRIVATE` - party is not joinable without an invite from the leader","type":[[["string"]]],"meta":{"line":2,"file":"index.js","path":"enums"}},{"name":"Platform","description":"Represents the platform of an online Fortnite player:\n* `WINDOWS`\n* `MAC`\n* `PLAYSTATION`\n* `XBOX`\n* `SWITCH`\n* `IOS`\n* `ANDROID`","type":[[["string"]]],"meta":{"line":54,"file":"index.js","path":"enums"}},{"name":"Playlist","description":"Represents a playlist:\n* `SOLO`\n* `DUO`\n* `SQUAD`\n* `CREATIVE` - creative don't fill\n* `CREATIVE_PLAY` - creative fill","type":[[["string"]]],"meta":{"line":75,"file":"index.js","path":"enums"}},{"name":"Language","description":"Represents a language (only the ones that are supported by Fortnite):\n* `ARABIC`\n* `GERMAN`\n* `ENGLISH`\n* `SPANISH`\n* `FRENCH`\n* `ITALIAN`\n* `JAPANESE`\n* `POLISH`\n* `RUSSIAN`\n* `TURKISH`","type":[[["string"]]],"meta":{"line":112,"file":"index.js","path":"enums"}},{"name":"Gamemode","description":"Represents a Fortnite gamemode:\n* `BATTLE_ROYALE`\n* `CREATIVE`\n* `SAVE_THE_WORLD`","type":[[["string"]]],"meta":{"line":139,"file":"index.js","path":"enums"}},{"name":"KairosColor","description":"Represents a Kairos (Party Hub) profile color:\n* `TEAL`\n* `SWEET_RED`\n* `LIGHT_ORANGE`\n* `GREEN`\n* `LIGHT_BLUE`\n* `DARK_BLUE`\n* `PINK`\n* `RED`\n* `GRAY`\n* `ORANGE`\n* `DARK_PURPLE`\n* `LIME`\n* `INDIGO`","type":[[["string"]]],"meta":{"line":152,"file":"index.js","path":"enums"}},{"name":"DefaultSkin","description":"Represents a default skin:\n* `FEMALE_1`\n* `FEMALE_2`\n* `FEMALE_3`\n* `FEMALE_4`\n* `MALE_1`\n* `MALE_2`\n* `MALE_3`\n* `MALE_4`","type":[[["string"]]],"meta":{"line":185,"file":"index.js","path":"enums"}},{"name":"SeasonStart","description":"Represents a season's start time:\n* `CH1_S1`\n* `CH1_S2`\n* `CH1_S3`\n* `CH1_S4`\n* `CH1_S5`\n* `CH1_S6`\n* `CH1_S7`\n* `CH1_S8`\n* `CH1_S9`\n* `CH1_S10`\n* `CH2_S1`\n* `CH2_S2`\n* `CH2_S3`\n* `CH2_S4`","type":[[["string"]]],"meta":{"line":208,"file":"index.js","path":"enums"}},{"name":"SeasonEnd","description":"Represents a season's end time:\n* `CH1_S1`\n* `CH1_S2`\n* `CH1_S3`\n* `CH1_S4`\n* `CH1_S5`\n* `CH1_S6`\n* `CH1_S7`\n* `CH1_S8`\n* `CH1_S9`\n* `CH1_S10`\n* `CH2_S1`\n* `CH2_S2`\n* `CH2_S3`\n* `CH2_S4`","type":[[["string"]]],"meta":{"line":244,"file":"index.js","path":"enums"}},{"name":"CreatorCodeStatus","description":"Represents a creator code status:\n* `ACTIVE`\n* `INACTIVE`","type":[[["string"]]],"meta":{"line":278,"file":"index.js","path":"enums"}},{"name":"PendingFriendDirection","description":"Represents a pending friend's direction:\n* `INCOMING`\n* `OUTGOING`","type":[[["string"]]],"meta":{"line":286,"file":"index.js","path":"enums"}},{"name":"ClientOptions","description":"The options for a client","type":[[["Object"]]],"props":[{"name":"savePartyMemberMeta","description":"Whether to save the party member meta","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"http","description":"The options to be used for the client's HTTP manager","optional":true,"type":[[["HTTPOptions"]]]},{"name":"debug","description":"Used to send debug messages","optional":true,"default":"console.log","type":[[["function"]]]},{"name":"httpDebug","description":"Whether to send HTTP debug messages","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"xmppDebug","description":"Whether to send XMPP debug messages","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"status","description":"The presence status message of the client's user","optional":true,"default":"''","type":[[["string"]]]},{"name":"platform","description":"The platform that will be used for the client's user","optional":true,"default":"WINDOWS","type":[[["Platform"]]]},{"name":"memberMeta","description":"The client's default member meta for joined parties","optional":true,"default":"{}","type":[[["Object"]]]},{"name":"keepAliveInterval","description":"The client's XMPP connection's keep alive interval","optional":true,"default":60,"type":[[["number"]]]},{"name":"cachePresences","description":"Whether friend presences should be cached. NOTE: This will break friend.isOnline, friend.isJoinable and friend.joinParty()","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"auth","description":"The credentials that will be used for client's authentication","type":[[["ClientAuth"]]]},{"name":"partyConfig","description":"The default party config","type":[[["PartyConfig"]]]},{"name":"kairos","description":"The default kairos config","type":[[["KairosConfig"]]]}],"meta":{"line":5,"file":"Constants.js","path":"resources"}},{"name":"HTTPOptions","description":"The options to be used for the client's HTTP manager","type":[[["Object"]]],"props":[{"name":"timeout","description":"The timeout (in milliseconds) of the HTTP requests","optional":true,"default":10000,"type":[[["number"]]]},{"name":"header","description":"The default headers that will be used for each HTTP request","optional":true,"default":"{}","type":[[["Object"]]]},{"name":"json","description":"Whether to return an HTTP request's response as an JSON object","optional":true,"default":true,"type":[[["boolean"]]]}],"meta":{"line":24,"file":"Constants.js","path":"resources"}},{"name":"ClientAuth","description":"The credentials that will be used for client's authentication","type":[[["Object"]]],"props":[{"name":"deviceAuth","description":"The device auth's credentials","optional":true,"type":[[["Object"]],[["string"]],[["function"]]]},{"name":"exchangeCode","description":"The exchange code","optional":true,"type":[[["string"]]]},{"name":"authorizationCode","description":"The authorization code","optional":true,"type":[[["string"]]]},{"name":"refreshToken","description":"The refresh token","optional":true,"type":[[["string"]]]},{"name":"deviceCode","description":"Whether to use a device code","optional":true,"type":[[["boolean"]]]},{"name":"checkEULA","description":"Whether EULA should be checked and agreed or not","optional":true,"default":true,"type":[[["boolean"]]]}],"meta":{"line":44,"file":"Constants.js","path":"resources"}},{"name":"PartyConfig","description":"The party config","type":[[["Object"]]],"props":[{"name":"privacy","description":"The privacy of the party","optional":true,"default":"PUBLIC","type":[[["PartyPrivacy"]]]},{"name":"joinConfirmation","description":"Whether joining party needs confirmation","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"joinability","description":"The joinability of the party","optional":true,"default":"'OPEN'","type":[[["string"]]]},{"name":"maxSize","description":"The maximum member size of the party","optional":true,"default":16,"type":[[["number"]]]},{"name":"chatEnabled","description":"Whether the chat of the party should be enabled","optional":true,"default":true,"type":[[["boolean"]]]}],"meta":{"line":62,"file":"Constants.js","path":"resources"}},{"name":"KairosConfig","description":"The Kairos config","type":[[["Object"]]],"props":[{"name":"cid","description":"The CID of the Kairos avatar","optional":true,"default":"DefaultSkin#random","type":[[["string"]]]},{"name":"color","description":"The color of the Kairos avatar","optional":true,"default":"DefaultColor#random","type":[[["string"]]]}],"meta":{"line":78,"file":"Constants.js","path":"resources"}},{"name":"AuthData","description":"Contains authorization data for Epic Games' services","access":"private","type":[[["Object"]]],"props":[{"name":"token","description":"The access token","nullable":true,"type":[[["string"]]]},{"name":"expires_at","description":"The access token's expiration date as ISO string","nullable":true,"type":[[["string"]]]}],"meta":{"line":90,"file":"Constants.js","path":"resources"}},{"name":"AuthAccount","description":"Contains data of the authorized Epic Games account","access":"private","type":[[["Object"]]],"props":[{"name":"id","description":"The id of the account","nullable":true,"type":[[["string"]]]},{"name":"displayName","description":"The display name of the account","nullable":true,"type":[[["string"]]]}],"meta":{"line":102,"file":"Constants.js","path":"resources"}},{"name":"FPKairosAvatar","description":"Contains data about a friend presence's Kairos avatar","type":[[["Object"]]],"props":[{"name":"asset","description":"The avatar's asset","nullable":true,"type":[[["string"]]]},{"name":"background","description":"The avatar's background","nullable":true,"type":[[["string"]]]}],"meta":{"line":114,"file":"Constants.js","path":"resources"}},{"name":"FPGameplayStats","description":"Contains data about a friend's gameplay stats","type":[[["Object"]]],"props":[{"name":"kills","description":"The kill count of the friends in the gameplay","nullable":true,"type":[[["number"]]]},{"name":"fellToDeath","description":"Whether the friend died","nullable":true,"type":[[["boolean"]]]},{"name":"serverPlayerCount","description":"The player count on the gameplay's server","nullable":true,"type":[[["number"]]]}],"meta":{"line":125,"file":"Constants.js","path":"resources"}},{"name":"FPPartyData","description":"Contains data about a friend's party","type":[[["Object"]]],"props":[{"name":"id","description":"The id of the party","nullable":true,"type":[[["string"]]]},{"name":"isPrivate","description":"Whether the party is private or not","nullable":true,"type":[[["boolean"]]]},{"name":"memberCount","description":"The party's member count","nullable":true,"type":[[["number"]]]},{"name":"platform","description":"The party's platform","nullable":true,"type":[[["string"]]]},{"name":"buildId","description":"The party's build id","nullable":true,"type":[[["string"]]]}],"meta":{"line":138,"file":"Constants.js","path":"resources"}},{"name":"DeviceAuthCredentials","description":"Contains a device auth's credentials","type":[[["Object"]]],"props":[{"name":"accountId","description":"The account id of the device auth","type":[[["string"]]]},{"name":"deviceId","description":"The id of the device auth","type":[[["string"]]]},{"name":"secret","description":"The secret of the device auth","type":[[["string"]]]}],"meta":{"line":155,"file":"Constants.js","path":"resources"}},{"name":"BasicToken","description":"Represents a Fortnite basic access token:\n* `LAUNCHER_WINDOWS`\n* `FORTNITE_WINDOWS`\n* `FORTNITE_IOS`\n* `FORTNITE_SWITCH`","type":[[["Object"]]],"meta":{"line":1,"file":"Tokens.js","path":"resources"}},{"name":"PartyLock","description":"The client's party lock\nUsed for delaying all party-related xmpp events while changes to client's party are made","access":"private","type":[[["Object"]]],"props":[{"name":"active","description":"Indicates if the party lock is active","type":[[["boolean"]]]},{"name":"wait","description":"Sleep until party lock is no longer active","type":[[["function"]]]}],"meta":{"line":94,"file":"index.js","path":"src/client"}},{"name":"ReauthLock","description":"The client's reauthentication lock\nUsed for delaying all Http requests while the client is reauthenticating","access":"private","type":[[["Object"]]],"props":[{"name":"active","description":"Indicates if the reauthentication lock is active","type":[[["boolean"]]]},{"name":"wait","description":"Sleep until reauthentication lock is no longer active","type":[[["function"]]]}],"meta":{"line":115,"file":"index.js","path":"src/client"}}],"externals":[]}
